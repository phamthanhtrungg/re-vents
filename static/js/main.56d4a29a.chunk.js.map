{"version":3,"sources":["features/event/event-list/event-list-attendee.jsx","features/event/event-list/event-list-item.jsx","features/event/event-list/event-list.jsx","features/async/async.action.jsx","features/event/event.action.jsx","app/layout/loading.jsx","features/event/event-activity/index.jsx","features/event/event-dashboard/index.jsx","features/modal/modal.action.jsx","features/auth/auth.action.jsx","features/menu/sign-out/index.jsx","features/menu/sign-in/index.jsx","features/nav/nav-bar/index.jsx","features/event/event-detail/event-detail-chat.jsx","features/event/event-detail/event-detail-header.jsx","features/event/event-detail/event-detail-map.jsx","features/event/event-detail/event-detail-info.jsx","features/event/event-detail/event-detail-sidebar.jsx","features/event/event-detail/index.jsx","features/user/people-dashboard/index.jsx","features/user/user-detail/index.jsx","features/user/settings/setting-nav/index.jsx","app/common/form/date-picker.jsx","app/common/form/widget.jsx","app/common/form/connector.jsx","app/common/form/place-input.jsx","app/common/form/radio-input.jsx","app/common/form/text-input.jsx","features/user/settings/basic/index.jsx","app/common/form/select-input.jsx","app/common/form/text-area.jsx","features/user/settings/about/index.jsx","features/user/settings/photo/index.jsx","features/user/settings/account/index.jsx","features/user/settings/setting-dashboard/index.jsx","features/event/event-form/index.jsx","features/home/index.jsx","features/auth/social-login/index.jsx","features/auth/log-in/login-form.jsx","features/auth/register/register-form.jsx","features/modal/modal-manager.jsx","features/modal/login-modal.jsx","features/modal/register-modal.jsx","app/utils/auth-loaded.jsx","app/layout/app.jsx","reportWebVitals.js","features/event/event.reducer.jsx","features/modal/modal.reducer.jsx","features/auth/auth.reducer.jsx","features/async/async.reducer.jsx","app/config/firebase.js","app/store/store.js","app/utils/scroll-to-top.jsx","index.js"],"names":["EventListAttendee","photoURL","List","Item","Image","as","size","circular","src","alt","EventListItem","event","handleDeleteEvent","title","date","description","venue","hostedBy","hostPhotoURL","attendees","Segment","Group","Content","Header","Description","href","Icon","name","moment","toDate","fromNow","secondary","horizontal","Object","values","map","attendee","id","key","clearing","Button","color","floated","onClick","Link","to","EventList","events","asyncActionStart","createAction","asyncActionFinish","asyncActionError","deleteEvent","eventId","fetchEvents","createEventType","updateEventType","LoadingComponent","Dimmer","active","inverted","Loader","content","EventActivity","attached","EventDashboard","useFirestoreConnect","loading","useSelector","state","firestore","status","requesting","ordered","dispatch","useDispatch","Grid","Column","width","openModal","closeModal","registerUserFailed","logInFailed","resetAuthState","socialLogin","selectedProvider","_getState","a","getFirebase","firebase","login","type","provider","console","log","SignOutMenu","Menu","position","basic","modalType","style","marginLeft","SignInMenu","profile","auth","useFirebase","history","useHistory","avatar","spaced","process","Dropdown","pointing","text","displayName","icon","uid","signOut","push","NavBar","fixed","Container","header","marginRight","NavLink","positive","isLoaded","isEmpty","EventDetailChat","eventImageTextStyle","bottom","left","EventDetailHeader","padding","fluid","format","Marker","EventDetailMap","props","height","bootstrapURLKeys","defaultCenter","center","defaultZoom","zoom","lat","lng","EventDetailInfo","useState","showMap","setShowMap","verticalAlign","venueLatLng","EventDetailSideBar","textAlign","border","length","divided","Label","ribbon","EventDetail","match","params","filter","PeopleDashboard","UserDetailedPage","collection","doc","subcollections","storeAs","photos","occupation","dateOfBirth","diff","origin","columns","Date","createdAt","toDateString","interest","interests","i","photo","url","Card","itemsPerRow","Meta","SettingNav","vertical","Row","DateInputPicker","placeholder","error","setValue","triggerValidation","value","rest","FormField","selected","onChange","placeholderText","dateFormat","timeFormat","showYearDropDown","dropdownMode","connect","createConnector","getProvidedProps","refine","searchState","nextValue","aroundLatLng","boundingBox","getSearchParameters","searchParameters","currentRefinement","defaultRefinement","setQueryParameter","createRef","c","element","this","autocomplete","places","container","useDeviceLocation","setVal","on","handleChange","suggestion","latlng","marginBottom","ref","Component","searchClient","algoliasearch","PlaceInput","Form","Field","InstantSearch","indexName","e","RadioInput","register","label","className","TextInput","fieldProps","otherProps","Basics","mounted","setMounted","user","useForm","mode","defaultValues","formState","errors","trigger","getValues","handleSubmit","watch","setError","useEffect","city","gender","handleUpdateUserProfile","data","userInfo","updateProfile","toastr","success","message","dividing","onSubmit","required","inline","showMonthDropdown","showYearDropdown","maxDate","subtract","general","Message","list","Divider","isSubmitting","SelectInput","options","multiple","Select","TextArea","About","about","handleUpdateAboutInfo","marginTop","rows","PhotosPage","files","setFiles","isUploading","setIsUploading","myCropper","useRef","useFirestore","useDropzone","onDrop","acceptFiles","accept","getRootProps","getInputProps","handleUploadProfileImage","currentUser","path","current","getCroppedCanvas","toBlob","blob","uploadFile","uploadedFile","uploadTaskSnapshot","getDownloadURL","downloadURL","get","add","handleDeleteImage","deleteFile","delete","handleSetMainImage","sub","URL","createObjectURL","initialAspectRatio","preview","viewMode","guides","minCropBoxHeight","minCropBoxWidth","background","responsive","autoCropArea","checkOrientation","onInitialized","cropper","overflow","disabled","display","flexDirection","minHeight","flex","schema","yup","shape","password","min","confirmPassword","oneOf","Account","resolver","yupResolver","reValidateMode","reset","providerData","providerId","updatePassword","autoComplete","isValid","SettingDashboard","exact","from","component","Basic","Photo","category","EventForm","newEvent","updatedEvent","v4","err","goBack","hidden","showTimeSelect","Home","SocialLogin","LoginForm","logInError","signInWithEmailAndPassword","email","RegisterForm","registerUserError","createUserWithEmailAndPassword","newUser","FieldValue","serverTimestamp","set","minLength","modalLookUp","LogInModal","Modal","open","onClose","RegisterModal","ModalManager","modals","renderedModal","modalProps","ModalComponent","AuthIsLoaded","children","App","render","UserDetail","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","eventReducer","handleActions","payload","pick","assign","modalReducer","initialState","authReducer","asyncReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","rootReducer","combineReducers","async","toastrReducer","firebaseReducer","firestoreReducer","middlewares","thunk","withExtraArgument","getFirestore","storeEnhancer","applyMiddleware","composedEnhander","composeWithDevTools","reduxFirestore","store","createStore","ScrollToTop","pathname","useLocation","window","scrollTo","rrfProps","config","userProfile","attachAuthIsReady","firebaseStateName","useFirestoreForProfile","profileFactory","userData","profileData","avatarUrl","createFirestoreInstance","ReactDOM","timeOut","transitionIn","transitionOut","document","getElementById"],"mappings":"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","file":"static/js/main.56d4a29a.chunk.js","sourcesContent":["import React from \"react\";\nimport { List, Image } from \"semantic-ui-react\";\n\nfunction EventListAttendee({ photoURL }) {\n  return (\n    <List.Item>\n      <Image as=\"a\" size=\"mini\" circular src={photoURL} alt=\"\" />\n    </List.Item>\n  );\n}\n\nexport default EventListAttendee;\n","import React from \"react\";\nimport { Button, Icon, Item, List, Segment } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport EventListAttendee from \"./event-list-attendee\";\nimport moment from \"moment\";\n\nfunction EventListItem({ event, handleDeleteEvent }) {\n  const {\n    title,\n    date,\n    description,\n    venue,\n    hostedBy,\n    hostPhotoURL,\n    attendees,\n  } = event;\n  return (\n    <Segment.Group>\n      <Segment>\n        <Item.Group>\n          <Item>\n            <Item.Image size=\"tiny\" circular src={hostPhotoURL} alt=\"\" />\n            <Item.Content>\n              <Item.Header as=\"a\">{title}</Item.Header>\n              <Item.Description>\n                Hosted by <a href=\"/\">{hostedBy}</a>\n              </Item.Description>\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" /> {moment(date.toDate()).fromNow()} |\n          <Icon name=\"marker\" /> {venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <List horizontal>\n          {attendees &&\n            Object.values(attendees).map((attendee, id) => (\n              <EventListAttendee key={attendee.name + id} {...attendee} />\n            ))}\n        </List>\n      </Segment>\n      <Segment clearing>\n        <span>{description}</span>\n        <Button\n          color=\"red\"\n          floated=\"right\"\n          onClick={() => handleDeleteEvent(event.id)}\n        >\n          Delete\n        </Button>\n        <Button\n          as={Link}\n          to={`/events/${event.id}`}\n          color=\"teal\"\n          floated=\"right\"\n        >\n          View\n        </Button>\n      </Segment>\n    </Segment.Group>\n  );\n}\n\nexport default EventListItem;\n","import React from \"react\";\nimport EventListItem from \"./event-list-item\";\n\nfunction EventList({ events, handleDeleteEvent }) {\n  return (\n    <div>\n      <h1>Event List</h1>\n      {events.map((event) => (\n        <EventListItem\n          key={event.id}\n          event={event}\n          handleDeleteEvent={handleDeleteEvent}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default EventList;\n","import { createAction } from \"redux-actions\";\n\nexport const asyncActionStart = createAction(\"ASYNC_ACTION_START\");\nexport const asyncActionFinish = createAction(\"ASYNC_ACTION_FINISH\");\nexport const asyncActionError = createAction(\"ASYNC_ACTION_ERROR\");\n","import { createAction } from \"redux-actions\";\nimport { toastr } from \"react-redux-toastr\";\nimport { fetchData } from \"../../app/data/mock-api\";\nimport {\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../async/async.action\";\n\nexport const deleteEvent = createAction(\"DELETE_EVENT\", (eventId) => eventId);\nexport const fetchEvents = createAction(\"FETCH_EVENTS\");\nexport const createEventType = createAction(\"CREATE_EVENT\");\nexport const updateEventType = createAction(\"UPDATE_EVENT\");\n\nexport const createEvent = (newEvent) => {\n  return async (dispatch) => {\n    try {\n      dispatch(createEventType(newEvent));\n      toastr.success(\"Success\", \"Event has beed created\");\n    } catch (err) {\n      toastr.error(\"Oops\", \"Something went wrong\");\n    }\n  };\n};\nexport const updateEvent = (updatedEvent) => {\n  return async (dispatch) => {\n    try {\n      dispatch(updateEventType(updatedEvent));\n      toastr.success(\"Success\", \"Event has beed updated\");\n    } catch (err) {\n      toastr.error(\"Oops\", \"Something went wrong\");\n    }\n  };\n};\n\nexport const loadEvents = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      let events = await fetchData();\n      dispatch(fetchEvents(events));\n      dispatch(asyncActionFinish());\n    } catch (err) {\n      dispatch(asyncActionError(err));\n    }\n  };\n};\n","import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\nfunction LoadingComponent() {\n  return (\n    <Dimmer active inverted>\n      <Loader inverted content=\"Loading\" />\n    </Dimmer>\n  );\n}\n\nexport default LoadingComponent;\n","import React from \"react\";\nimport { Segment, Header } from \"semantic-ui-react\";\n\nfunction EventActivity() {\n  return (\n    <div>\n      <Header attached=\"top\" content=\"Recent Activities\" />\n      <Segment attached>\n        <p>Recent activities</p>\n      </Segment>\n    </div>\n  );\n}\n\nexport default EventActivity;\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport EventList from \"../event-list/event-list\";\nimport { deleteEvent } from \"../event.action\";\nimport LoadingComponent from \"../../../app/layout/loading\";\nimport EventActivity from \"../event-activity\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\n\nfunction EventDashboard() {\n  useFirestoreConnect([\"events\"]);\n  const loading = useSelector(\n    (state) => state.firestore.status.requesting.events\n  );\n  const events = useSelector((state) => state.firestore?.ordered?.events || []);\n  const dispatch = useDispatch();\n\n  const handleDeleteEvent = (eventId) => {\n    dispatch(deleteEvent(eventId));\n  };\n\n  return loading ? (\n    <LoadingComponent />\n  ) : (\n    <Grid>\n      <Grid.Column width={10}>\n        <EventList events={events} handleDeleteEvent={handleDeleteEvent} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <EventActivity />\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default EventDashboard;\n","import { createAction } from \"redux-actions\";\n\nexport const openModal = createAction(\"OPEN_MODAL\");\nexport const closeModal = createAction(\"CLOSE_MODAL\");\n","import { createAction } from \"redux-actions\";\nimport { closeModal } from \"../modal/modal.action\";\n\nexport const registerUserFailed = createAction(\"REGISTER_USER_FAILED\");\nexport const logInFailed = createAction(\"LOG_IN_FAILED\");\nexport const resetAuthState = createAction(\"RESET_AUTH_STATE\");\n\nexport const login = (data) => {\n  return async (dispatch, _getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    try {\n      await firebase\n        .auth()\n        .signInWithEmailAndPassword(data.email, data.password);\n      dispatch(closeModal());\n    } catch (error) {\n      dispatch(logInFailed(error));\n    }\n  };\n};\n\nexport const registerUser = (user) => {\n  return async (dispatch, _getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    const firestore = firebase.firestore();\n    try {\n      //create user in auth\n      await firebase\n        .auth()\n        .createUserWithEmailAndPassword(user.email, user.password);\n\n      //update profile\n      await firebase.auth().currentUser.updateProfile({\n        displayName: user.displayName,\n      });\n\n      //create new profile in firestore\n      const newUser = {\n        displayName: user.displayName,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      };\n\n      await firestore\n        .collection(\"users\")\n        .doc(`/${firebase.auth().currentUser.uid}`)\n        .set({ ...newUser });\n      dispatch(closeModal());\n    } catch (error) {\n      dispatch(registerUserFailed(error));\n    }\n  };\n};\n\nexport const socialLogin = (selectedProvider) => {\n  return async (dispatch, _getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    try {\n      dispatch(closeModal());\n      await firebase.login({\n        type: \"popup\",\n        provider: selectedProvider,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Menu, Button } from \"semantic-ui-react\";\nimport { resetAuthState } from \"../../auth/auth.action\";\nimport { openModal } from \"../../modal/modal.action\";\n\nfunction SignOutMenu() {\n  const dispatch = useDispatch();\n  return (\n    <Menu.Item position=\"right\">\n      <Button\n        basic\n        inverted\n        content=\"Login\"\n        onClick={() => {\n          dispatch(resetAuthState());\n          dispatch(openModal({ modalType: \"LogInModal\" }));\n        }}\n      />\n      <Button\n        basic\n        inverted\n        content=\"Register\"\n        style={{ marginLeft: \"1rem\" }}\n        onClick={() => {\n          dispatch(openModal({ modalType: \"RegisterModal\" }));\n        }}\n      />\n    </Menu.Item>\n  );\n}\n\nexport default SignOutMenu;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Menu, Image, Dropdown } from \"semantic-ui-react\";\nimport { resetAuthState } from \"../../auth/auth.action\";\n\nfunction SignInMenu() {\n  const { profile, auth } = useSelector((state) => state.firebase);\n  const dispatch = useDispatch();\n  const firebase = useFirebase();\n  const history = useHistory();\n  return (\n    <Menu.Item position=\"right\">\n      <Image\n        avatar\n        spaced=\"right\"\n        src={profile.photoURL || process.env.PUBLIC_URL + \"/assets/user.png\"}\n        alt=\"\"\n      />\n      <Dropdown pointing=\"top left\" text={profile.displayName}>\n        <Dropdown.Menu>\n          <Dropdown.Item\n            as={Link}\n            to=\"/create-event\"\n            text=\"Create Event\"\n            icon=\"plus\"\n          />\n          <Dropdown.Item text=\"My Events\" icon=\"calendar\" />\n          <Dropdown.Item text=\"My Network\" icon=\"users\" />\n          <Dropdown.Item\n            as={Link}\n            to={`/profile/${auth.uid}`}\n            text=\"My Profile\"\n            icon=\"user\"\n          />\n          <Dropdown.Item\n            as={Link}\n            to=\"/settings\"\n            text=\"Settings\"\n            icon=\"settings\"\n          />\n          <Dropdown.Item\n            text=\"Sign Out\"\n            icon=\"power\"\n            onClick={() => {\n              firebase.auth().signOut();\n              history.push(\"/\");\n              dispatch(resetAuthState());\n            }}\n          />\n        </Dropdown.Menu>\n      </Dropdown>\n    </Menu.Item>\n  );\n}\n\nexport default SignInMenu;\n","import React from \"react\";\nimport { Button, Container, Menu } from \"semantic-ui-react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport SignOutMenu from \"../../menu/sign-out\";\nimport SignInMenu from \"../../menu/sign-in\";\nimport { useSelector } from \"react-redux\";\n\nfunction NavBar() {\n  const { auth } = useSelector((state) => state.firebase);\n\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item header as={Link} to=\"/\">\n          <img\n            src={process.env.PUBLIC_URL + \"/assets/logo.png\"}\n            alt=\"Logo\"\n            style={{ marginRight: \"0.5rem\" }}\n          />\n          Re-vents\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/events\" name=\"Events\" />\n        <Menu.Item as={NavLink} to=\"/people\" name=\"People\" />\n        <Menu.Item>\n          <Button\n            floated=\"right\"\n            as={Link}\n            to=\"/create-event\"\n            positive\n            inverted\n            content=\"Create Event\"\n          />\n        </Menu.Item>\n        {auth.isLoaded && !auth.isEmpty ? <SignInMenu /> : <SignOutMenu />}\n      </Container>\n    </Menu>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\n\nfunction EventDetailChat() {\n  return (\n    <div>\n      <h1>event chat</h1>\n    </div>\n  );\n}\n\nexport default EventDetailChat;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Image, Item, Button, Header } from \"semantic-ui-react\";\nimport moment from \"moment\";\n\nconst eventImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  color: \"white\",\n};\n\nfunction EventDetailHeader({ event }) {\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        <Image src={process.env.PUBLIC_URL + \"/assets/pho.jpg\"} fluid alt=\"\" />\n\n        <Segment basic style={eventImageTextStyle}>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={event.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{moment(event.date).format(\"DD/MM/yyyy HH:mm\")}</p>\n                <p>\n                  Hosted by <strong>{event.hostedBy}</strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n\n      <Segment attached=\"bottom\">\n        <Button>Cancel My Place</Button>\n        <Button color=\"teal\">JOIN THIS EVENT</Button>\n\n        <Button\n          color=\"orange\"\n          floated=\"right\"\n          as={Link}\n          to={`/manage/${event.id}`}\n        >\n          Manage Event\n        </Button>\n      </Segment>\n    </Segment.Group>\n  );\n}\n\nexport default EventDetailHeader;\n","import React from \"react\";\nimport { Icon, Segment } from \"semantic-ui-react\";\nimport GoogleMapReact from \"google-map-react\";\nconst Marker = ({ text }) => <Icon color=\"red\" name=\"marker\" size=\"large\" />;\n\nconst EventDetailMap = (props) => {\n  return (\n    <Segment attached=\"bottom\">\n      <div style={{ height: \"300px\", width: \"100%\" }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: process.env.REACT_APP_GG_API_KEY }}\n          defaultCenter={props.center}\n          defaultZoom={props.zoom}\n        >\n          <Marker\n            lat={props.center.lat}\n            lng={props.center.lng}\n            text=\"My Marker\"\n          />\n        </GoogleMapReact>\n      </div>\n    </Segment>\n  );\n};\n\nexport default EventDetailMap;\n","import React, { useState } from \"react\";\nimport { Segment, Grid, Icon, Button } from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport EventDetailMap from \"./event-detail-map\";\n\nfunction EventDetailInfo({ event }) {\n  const [showMap, setShowMap] = useState(false);\n\n  const toggleMap = () => {\n    setShowMap(!showMap);\n  };\n\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{event.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{moment(event.date).format(\"DD/MM/yyyy HH:mm\")}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>{event.venue}</span>\n          </Grid.Column>\n\n          <Grid.Column width={4}>\n            <Button\n              color=\"teal\"\n              size=\"tiny\"\n              content={showMap ? \"Hide Map\" : \"Show Map\"}\n              onClick={toggleMap}\n            />\n          </Grid.Column>\n          {showMap && (\n            <EventDetailMap\n              zoom={8}\n              center={{\n                lat: event.venueLatLng.lat || 59.95,\n                lng: event.venueLatLng.lng || 30.33,\n              }}\n            />\n          )}\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n}\n\nexport default EventDetailInfo;\n","import React, { Fragment } from \"react\";\nimport { Segment, Label, Item } from \"semantic-ui-react\";\n\nfunction EventDetailSideBar({ attendees }) {\n  return (\n    <Fragment>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: \"none\" }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        {attendees && attendees.length}{\" \"}\n        {attendees && attendees.length === 1 ? \"Person\" : \"People\"} going\n      </Segment>\n      <Segment attached>\n        <Item.Group divided>\n          {attendees &&\n            attendees.map((attendee) => (\n              <Item key={attendee.id} style={{ position: \"relative\" }}>\n                <Label\n                  style={{ position: \"absolute\" }}\n                  color=\"orange\"\n                  ribbon=\"right\"\n                >\n                  Host\n                </Label>\n                <Item.Image size=\"tiny\" src={attendee.photoURL} alt=\"\" />\n                <Item.Content verticalAlign=\"middle\">\n                  <Item.Header as=\"h3\">{attendee.name}</Item.Header>\n                </Item.Content>\n              </Item>\n            ))}\n        </Item.Group>\n      </Segment>\n    </Fragment>\n  );\n}\n\nexport default EventDetailSideBar;\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { useSelector } from \"react-redux\";\n\nimport EventDetailChat from \"./event-detail-chat\";\nimport EventDetailHeader from \"./event-detail-header\";\nimport EventDetailInfo from \"./event-detail-info\";\nimport EventDetailSideBar from \"./event-detail-sidebar\";\nimport LoadingComponent from \"../../../app/layout/loading\";\n\nfunction EventDetail({ match }) {\n  const eventId = match.params.id;\n  const events = useSelector((state) => state.events);\n  const event = events.filter((event) => event.id === eventId)[0];\n\n  return !event ? (\n    <LoadingComponent />\n  ) : (\n    <Grid>\n      <Grid.Column width={10}>\n        <EventDetailHeader event={event} />\n        <EventDetailInfo event={event} />\n        <EventDetailChat />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <EventDetailSideBar attendees={event.attendees} />\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default EventDetail;\n","import React from \"react\";\n\nfunction PeopleDashboard() {\n  return (\n    <div>\n      <h1>people dashboard</h1>\n    </div>\n  );\n}\n\nexport default PeopleDashboard;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport {\n  Button,\n  Card,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Item,\n  List,\n  Menu,\n  Segment,\n} from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/loading\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport { Link } from \"react-router-dom\";\n\nfunction UserDetailedPage() {\n  const { profile, auth } = useSelector((state) => state.firebase);\n  useFirestoreConnect([\n    {\n      collection: \"users\",\n      doc: auth.uid,\n      subcollections: [{ collection: \"photos\" }],\n      storeAs: \"photos\",\n    },\n  ]);\n  const photos = useSelector((state) => state.firestore.ordered.photos);\n\n  return profile.isEmpty && !profile.isLoaded ? (\n    <LoadingComponent />\n  ) : (\n    <Grid>\n      <Grid.Column width={16}>\n        <Segment>\n          <Item.Group>\n            <Item>\n              <Item.Image avatar size=\"small\" src={profile.photoURL} />\n              <Item.Content verticalAlign=\"bottom\">\n                <Header as=\"h1\">{profile.displayName}</Header>\n                <br />\n                <Header as=\"h3\">{profile.occupation}</Header>\n                <br />\n                <Header as=\"h3\">\n                  {profile.dateOfBirth\n                    ? moment().diff(\n                        moment(profile.dateOfBirth?.toDate()),\n                        \"years\"\n                      )\n                    : \"Unknown age\"}\n                  , Lives in {profile.origin}\n                </Header>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column width={12}>\n        <Segment>\n          <Grid columns={2}>\n            <Grid.Column width={10}>\n              <Header icon=\"smile\" content=\"About Display Name\" />\n              <p>\n                I am a: <strong>{profile.occupation || \"Unknown\"}</strong>\n              </p>\n              <p>\n                Originally from <strong>{profile.origin || \"Unknown\"}</strong>\n              </p>\n              <p>\n                Member Since:{\" \"}\n                <strong>\n                  {new Date(profile.createdAt.toDate()).toDateString()}\n                </strong>\n              </p>\n              <p>{profile.description}</p>\n            </Grid.Column>\n            <Grid.Column width={6}>\n              <Header icon=\"heart outline\" content=\"Interests\" />\n              {profile.interest ? (\n                <List>\n                  {profile.interests &&\n                    profile.interests.map((interest, i) => (\n                      <Item key={interest + i}>\n                        <Icon name=\"heart\" />\n                        <Item.Content>{interest}</Item.Content>\n                      </Item>\n                    ))}\n                </List>\n              ) : (\n                <p>No interests</p>\n              )}\n            </Grid.Column>\n          </Grid>\n        </Segment>\n      </Grid.Column>\n\n      <Grid.Column width={4}>\n        <Segment>\n          <Button\n            as={Link}\n            to=\"/settings\"\n            color=\"teal\"\n            fluid\n            basic\n            content=\"Edit Profile\"\n          />\n        </Segment>\n      </Grid.Column>\n\n      {photos && photos.length && (\n        <Grid.Column width={12}>\n          <Segment attached>\n            <Header icon=\"image\" content=\"Photos\" />\n            <Image.Group size=\"small\">\n              {photos.map((photo) => (\n                <Image key={photo.id} src={photo.url} alt=\"\" />\n              ))}\n            </Image.Group>\n          </Segment>\n        </Grid.Column>\n      )}\n\n      <Grid.Column width={12}>\n        <Segment attached>\n          <Header icon=\"calendar\" content=\"Events\" />\n          <Menu secondary pointing>\n            <Menu.Item name=\"All Events\" active />\n            <Menu.Item name=\"Past Events\" />\n            <Menu.Item name=\"Future Events\" />\n            <Menu.Item name=\"Events Hosted\" />\n          </Menu>\n\n          <Card.Group itemsPerRow={5}>\n            <Card>\n              <Image src={\"/assets/categoryImages/drinks.jpg\"} />\n              <Card.Content>\n                <Card.Header textAlign=\"center\">Event Title</Card.Header>\n                <Card.Meta textAlign=\"center\">\n                  28th March 2018 at 10:00 PM\n                </Card.Meta>\n              </Card.Content>\n            </Card>\n\n            <Card>\n              <Image src={\"/assets/categoryImages/drinks.jpg\"} />\n              <Card.Content>\n                <Card.Header textAlign=\"center\">Event Title</Card.Header>\n                <Card.Meta textAlign=\"center\">\n                  28th March 2018 at 10:00 PM\n                </Card.Meta>\n              </Card.Content>\n            </Card>\n          </Card.Group>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default UserDetailedPage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Grid, Menu, Header } from \"semantic-ui-react\";\n\nfunction SettingNav() {\n  return (\n    <Grid.Column width={4}>\n      <Menu vertical>\n        <Header icon=\"user\" attached inverted color=\"grey\" content=\"Profile\" />\n        <Menu.Item as={NavLink} to=\"/settings/basic\">\n          Basics\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/settings/about\">\n          About Me\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/settings/photo\">\n          My Photos\n        </Menu.Item>\n      </Menu>\n      <Grid.Row />\n      <Menu vertical>\n        <Header\n          icon=\"settings\"\n          attached\n          inverted\n          color=\"grey\"\n          content=\"Account\"\n        />\n        <Menu.Item as={NavLink} to=\"/settings/account\">\n          My Account\n        </Menu.Item>\n      </Menu>\n    </Grid.Column>\n  );\n}\n\nexport default SettingNav;\n","import React from \"react\";\nimport { isEmpty } from \"lodash\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { FormField, Label } from \"semantic-ui-react\";\n\nfunction DateInputPicker({\n  placeholder,\n  error,\n  width,\n  setValue,\n  triggerValidation,\n  name,\n  value,\n  ...rest\n}) {\n  return (\n    <FormField error={!isEmpty(error)}>\n      <DatePicker\n        name={name}\n        selected={value ? new Date(value) : null}\n        onChange={async (date) => {\n          setValue(name, date);\n          triggerValidation(name);\n        }}\n        placeholderText={placeholder}\n        dateFormat=\"dd/MM/yyyy HH:mm\"\n        timeFormat=\"HH:mm\"\n        showYearDropDown\n        dropdownMode=\"select\"\n        {...rest}\n      />\n      {!isEmpty(error) && (\n        <Label basic color=\"red\" pointing>\n          {error}\n        </Label>\n      )}\n    </FormField>\n  );\n}\n\nexport default DateInputPicker;\n","import React, { Component } from \"react\";\nimport places from \"places.js\";\nimport connect from \"./connector\";\n\nclass Places extends Component {\n  createRef = (c) => (this.element = c);\n\n  componentDidMount() {\n    const { refine, defaultRefinement } = this.props;\n\n    const autocomplete = places({\n      container: this.element,\n      useDeviceLocation: true,\n    });\n    autocomplete.setVal(this.props.value);\n    autocomplete.on(\"change\", (event) => {\n      this.props.handleChange && this.props.handleChange(event);\n      refine(event.suggestion.latlng);\n    });\n\n    autocomplete.on(\"clear\", () => {\n      refine(defaultRefinement);\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ marginBottom: 20 }}>\n        <input\n          ref={this.createRef}\n          type=\"search\"\n          id=\"address-input\"\n          placeholder={this.props.placeholder}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(Places);\n","import { createConnector } from \"react-instantsearch-dom\";\n\nexport default createConnector({\n  displayName: \"AlgoliaPlaces\",\n\n  getProvidedProps() {\n    return {};\n  },\n\n  refine(props, searchState, nextValue) {\n    return {\n      ...searchState,\n      aroundLatLng: nextValue,\n      boundingBox: {},\n    };\n  },\n\n  getSearchParameters(searchParameters, props, searchState) {\n    const currentRefinement =\n      searchState.aroundLatLng || props.defaultRefinement;\n\n    return searchParameters\n      .setQueryParameter(\"insideBoundingBox\")\n      .setQueryParameter(\n        \"aroundLatLng\",\n        `${currentRefinement.lat}, ${currentRefinement.lng}`\n      );\n  },\n});\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport { isEmpty } from \"lodash\";\nimport algoliasearch from \"algoliasearch/lite\";\nimport { InstantSearch } from \"react-instantsearch-dom\";\nimport Places from \"./widget\";\nconst searchClient = algoliasearch(\n  \"latency\",\n  \"6be0576ff61c053d5f9a3225e2a90f76\"\n);\n\nfunction PlaceInput({ name, error, setValue, placeholder, value }) {\n  return (\n    <Form.Field error={!isEmpty(error)}>\n      <InstantSearch indexName=\"airports\" searchClient={searchClient}>\n        <Places\n          key={value}\n          value={value}\n          defaultRefinement={{\n            lat: 37.7793,\n            lng: -122.419,\n          }}\n          handleChange={(e) => {\n            const {\n              value,\n              latlng: { lat, lng },\n            } = e.suggestion;\n            setValue(name, value);\n            setValue(\"lat\", lat);\n            setValue(\"lng\", lng);\n          }}\n          placeholder={placeholder}\n        />\n      </InstantSearch>\n      {!isEmpty(error) && (\n        <Label basic color=\"red\" pointing>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n}\n\nexport default PlaceInput;\n","import { isEmpty } from \"lodash\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\nfunction RadioInput({ error, value, type, name, register, label }) {\n  return (\n    <Form.Field error={!isEmpty(error)}>\n      <div className=\"ui radio\">\n        <input value={value} type={type} name={name} ref={register} />{\" \"}\n        <label>{label}</label>\n      </div>\n      {!isEmpty(error) && (\n        <Label basic color=\"red\" pointing>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n}\n\nexport default RadioInput;\n","import React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport { isEmpty } from \"lodash\";\n\nconst TextInput = ({\n  error,\n  width,\n  register,\n  placeholder = \"\",\n  type = \"text\",\n  name,\n  fieldProps,\n  ...otherProps\n}) => {\n  return (\n    <Form.Field error={!isEmpty(error)} width={width} {...fieldProps}>\n      <input\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        ref={register}\n        {...otherProps}\n      />\n      {!isEmpty(error) && (\n        <Label basic color=\"red\" pointing>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default TextInput;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { isEmpty } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Segment,\n  Form,\n  Header,\n  Divider,\n  Button,\n  Message,\n} from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { toastr } from \"react-redux-toastr\";\n\nimport DateInputPicker from \"../../../../app/common/form/date-picker\";\nimport PlaceInput from \"../../../../app/common/form/place-input\";\nimport RadioInput from \"../../../../app/common/form/radio-input\";\nimport TextInput from \"../../../../app/common/form/text-input\";\n\nconst Basics = (props) => {\n  const [mounted, setMounted] = useState(false);\n  const user = useSelector((state) => state.firebase.profile);\n  const {\n    register,\n    formState,\n    errors,\n    setValue,\n    trigger,\n    getValues,\n    handleSubmit,\n    watch,\n    setError,\n  } = useForm({\n    mode: \"all\",\n    defaultValues: { ...user, dateOfBirth: user?.dateOfBirth?.toDate() },\n  });\n\n  useEffect(() => {\n    register({ name: \"dateOfBirth\" });\n    register({ name: \"city\" });\n    setMounted(true);\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(user) && mounted) {\n      setValue(\"displayName\", user.displayName);\n      setValue(\"city\", user?.city || \"\");\n      setValue(\n        \"dateOfBirth\",\n        user?.dateOfBirth ? user.dateOfBirth.toDate() : \"\"\n      );\n      setValue(\"gender\", user.gender || \"\");\n    }\n  }, [user]);\n\n  const firebase = useFirebase();\n  const handleUpdateUserProfile = async (data) => {\n    const userInfo = { ...data };\n    if (userInfo.dateOfBirth) {\n      userInfo.dateOfBirth = new Date(userInfo.dateOfBirth);\n    }\n    try {\n      await firebase.updateProfile(userInfo);\n      toastr.success(\"Success\", \"Profile successfully updated\");\n    } catch (err) {\n      setError(\"general\", { message: err.message });\n    }\n  };\n\n  return (\n    <Segment>\n      <Header dividing size=\"large\" content=\"Basics\" />\n      <Form onSubmit={handleSubmit(handleUpdateUserProfile)}>\n        <TextInput\n          name=\"displayName\"\n          type=\"text\"\n          placeholder=\"Known As\"\n          register={register({\n            required: { message: \"Please enter your name\", value: true },\n          })}\n          error={errors?.displayName?.message}\n        />\n        <Form.Group inline>\n          <label>Gender:</label>\n          <RadioInput\n            type=\"radio\"\n            name=\"gender\"\n            value=\"male\"\n            label=\"Male\"\n            register={register}\n          />\n          <RadioInput\n            type=\"radio\"\n            value=\"female\"\n            name=\"gender\"\n            label=\"Female\"\n            register={register}\n          />\n        </Form.Group>\n        <DateInputPicker\n          width={8}\n          name=\"dateOfBirth\"\n          placeholder=\"Date of Birth\"\n          value={watch(\"dateOfBirth\")}\n          setValue={setValue}\n          triggerValidation={trigger}\n          showMonthDropdown={true}\n          showYearDropdown={true}\n          dateFormat=\"yyyy-MM-dd\"\n          maxDate={moment().subtract(18, \"years\")}\n        />\n        <PlaceInput\n          name=\"city\"\n          placeholder=\"Home Town\"\n          setValue={setValue}\n          value={getValues(\"city\") || \"\"}\n        />\n        {errors?.general?.message && (\n          <Message error list={[errors?.general?.message]} />\n        )}\n        <Divider />\n        <Button\n          size=\"large\"\n          positive\n          content=\"Update Profile\"\n          loading={formState.isSubmitting}\n        />\n      </Form>\n    </Segment>\n  );\n};\n\nexport default Basics;\n","import React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport { isEmpty } from \"lodash\";\n\nfunction SelectInput({\n  value,\n  name,\n  placeholder,\n  error,\n  triggerValidation,\n  setValue,\n  options,\n  multiple,\n  ...fieldProps\n}) {\n  return (\n    <Form.Field error={!isEmpty(error)} {...fieldProps}>\n      <Form.Select\n        multiple={multiple}\n        value={value}\n        name={name}\n        placeholder={placeholder}\n        onChange={async (e, { name, value }) => {\n          setValue(name, value);\n          await triggerValidation(name);\n        }}\n        options={options}\n      />\n      {!isEmpty(error) && (\n        <Label basic color=\"red\" pointing>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n}\n\nexport default SelectInput;\n","import React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport { isEmpty } from \"lodash\";\n\nconst TextArea = ({\n  error,\n  width,\n  register,\n  placeholder = \"\",\n  name,\n  ...otherProps\n}) => {\n  return (\n    <Form.Field error={!isEmpty(error)} width={width}>\n      <textarea\n        name={name}\n        placeholder={placeholder}\n        ref={register}\n        {...otherProps}\n      />\n      {!isEmpty(error) && (\n        <Label basic color=\"red\" pointing>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default TextArea;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Button,\n  Divider,\n  Form,\n  Header,\n  Segment,\n  Message,\n} from \"semantic-ui-react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { toastr } from \"react-redux-toastr\";\n\nimport PlaceInput from \"../../../../app/common/form/place-input\";\nimport RadioInput from \"../../../../app/common/form/radio-input\";\nimport SelectInput from \"../../../../app/common/form/select-input\";\nimport TextInput from \"../../../../app/common/form/text-input\";\nimport TextArea from \"../../../../app/common/form/text-area\";\nimport { useSelector } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\n\nconst interests = [\n  { key: \"drinks\", text: \"Drinks\", value: \"drinks\" },\n  { key: \"culture\", text: \"Culture\", value: \"culture\" },\n  { key: \"film\", text: \"Film\", value: \"film\" },\n  { key: \"food\", text: \"Food\", value: \"food\" },\n  { key: \"music\", text: \"Music\", value: \"music\" },\n  { key: \"travel\", text: \"Travel\", value: \"travel\" },\n];\n\nconst About = () => {\n  const user = useSelector((state) => state.firebase.profile);\n  const {\n    register,\n    setValue,\n    setError,\n    handleSubmit,\n    watch,\n    formState,\n    trigger,\n    errors,\n  } = useForm({\n    defaultValues: {\n      interests: [],\n      origin: \"\",\n      ...user,\n    },\n  });\n\n  useEffect(() => {\n    register({ name: \"interests\" });\n    register({ name: \"origin\" });\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(user)) {\n      setValue(\"status\", user?.status);\n      setValue(\"about\", user?.about);\n      setValue(\"interests\", user?.interests || []);\n      setValue(\"occupation\", user?.occupation);\n      setValue(\"origin\", user?.origin);\n    }\n  }, [user]);\n\n  const firebase = useFirebase();\n\n  const handleUpdateAboutInfo = async (data) => {\n    const userInfo = { ...data };\n    try {\n      await firebase.updateProfile(userInfo);\n      toastr.success(\"Success\", \"Profile successfully updated\");\n    } catch (err) {\n      setError(\"general\", { message: err.message });\n    }\n  };\n\n  return (\n    <Segment>\n      <Header dividing size=\"large\" content=\"About Me\" />\n      <p>Complete your profile to get the most out of this site</p>\n      <Form onSubmit={handleSubmit(handleUpdateAboutInfo)}>\n        <Form.Group inline>\n          <label>Tell us your status: </label>\n          <RadioInput\n            name=\"status\"\n            type=\"radio\"\n            value=\"single\"\n            label=\"Single\"\n            register={register}\n          />\n          <RadioInput\n            name=\"status\"\n            type=\"radio\"\n            value=\"relationship\"\n            label=\"Relationship\"\n            register={register}\n          />\n          <RadioInput\n            name=\"status\"\n            type=\"radio\"\n            value=\"married\"\n            label=\"Married\"\n            register={register}\n          />\n        </Form.Group>\n        <Divider />\n        <label>Tell us about yourself</label>\n        <TextArea\n          style={{ marginTop: \"1rem\" }}\n          rows={5}\n          name=\"about\"\n          placeholder=\"About Me\"\n          register={register}\n        />\n        <SelectInput\n          style={{ marginTop: \"1rem\" }}\n          name=\"interests\"\n          options={interests}\n          multiple={true}\n          placeholder=\"Select your interests\"\n          setValue={setValue}\n          triggerValidation={trigger}\n          value={watch(\"interests\")}\n        />\n        <TextInput\n          name=\"occupation\"\n          type=\"text\"\n          placeholder=\"Occupation\"\n          register={register}\n        />\n        <PlaceInput\n          value={watch(\"origin\")}\n          name=\"origin\"\n          placeholder=\"Country of Origin\"\n          setValue={setValue}\n        />\n        <Divider />\n\n        {errors?.general?.message && (\n          <Message error list={[errors?.general?.message]} />\n        )}\n\n        <Button\n          size=\"large\"\n          positive\n          content=\"Update Profile\"\n          type=\"submit\"\n          loading={formState.isSubmitting}\n        />\n      </Form>\n    </Segment>\n  );\n};\n\nexport default About;\n","import React, { useRef, useState } from \"react\";\nimport {\n  Image,\n  Segment,\n  Header,\n  Divider,\n  Grid,\n  Button,\n  Card,\n  Icon,\n} from \"semantic-ui-react\";\nimport { useDropzone } from \"react-dropzone\";\nimport Cropper from \"react-cropper\";\nimport {\n  useFirebase,\n  useFirestore,\n  useFirestoreConnect,\n} from \"react-redux-firebase\";\nimport { toastr } from \"react-redux-toastr\";\nimport { useSelector } from \"react-redux\";\n\nfunction PhotosPage() {\n  const [files, setFiles] = useState([]);\n  const [isUploading, setIsUploading] = useState(false);\n  const myCropper = useRef(null);\n  const { auth, profile } = useSelector((state) => state.firebase);\n  const firebase = useFirebase();\n  const firestore = useFirestore();\n  useFirestoreConnect([\n    {\n      collection: \"users\",\n      doc: auth.uid,\n      subcollections: [{ collection: \"photos\" }],\n      storeAs: \"photos\",\n    },\n  ]);\n  const photos = useSelector((state) => state.firestore.ordered.photos);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: (acceptFiles) => {\n      setFiles(acceptFiles);\n    },\n    multiple: false,\n    accept: \"image/*\",\n  });\n\n  const handleUploadProfileImage = async () => {\n    setIsUploading(true);\n    const user = firebase.auth().currentUser;\n    const path = `${user.uid}/user_images`;\n    const options = {\n      name: files[0].name,\n    };\n    myCropper.current.getCroppedCanvas().toBlob(async (blob) => {\n      try {\n        //upload file to firebase storage\n        const uploadedFile = await firebase.uploadFile(\n          path,\n          blob,\n          null,\n          options\n        );\n\n        //get downloable URL\n        const downloadURL = await uploadedFile.uploadTaskSnapshot.ref.getDownloadURL();\n\n        //if user dont have photoURL set them photoURL, else add new image to photos sub-collection\n        const userDoc = await firestore.get(`users/${user.uid}`);\n        if (!userDoc.data().photoURL) {\n          await firebase.updateProfile({ photoURL: downloadURL });\n          await user.updateProfile({ photoURL: downloadURL });\n        }\n\n        await firestore.add(\n          {\n            collection: \"users\",\n            doc: user.uid,\n            subcollections: [{ collection: \"photos\" }],\n          },\n          {\n            name: files[0].name,\n            url: downloadURL,\n          }\n        );\n        setIsUploading(false);\n        setFiles([]);\n        toastr.success(\"Success\", \"Photo has been uploaded\");\n      } catch (err) {\n        console.log(err);\n        setIsUploading(false);\n      }\n    });\n  };\n\n  const handleDeleteImage = async (photo) => {\n    const user = firebase.auth().currentUser;\n    try {\n      await firebase.deleteFile(`${user.uid}/user_images/${photo.name}`);\n      await firestore.delete({\n        collection: \"users\",\n        doc: user.uid,\n        subcollections: [\n          {\n            collection: \"photos\",\n            doc: photo.id,\n          },\n        ],\n      });\n      toastr.success(\"Success\", \"Photo deleted\");\n    } catch (err) {\n      toastr.error(\"Failed\", \"Something failed\");\n      console.log(err);\n    }\n  };\n\n  const handleSetMainImage = async (photo) => {\n    try {\n      await firebase.updateProfile({\n        photoURL: photo.url,\n      });\n      toastr.success(\"Success\", \"Main photo updated\");\n    } catch (err) {\n      toastr.error(\"Failed\", \"Something failed\");\n\n      console.log(err);\n    }\n  };\n\n  return (\n    <Segment>\n      <Header dividing size=\"large\" content=\"Your Photos\" />\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={4}>\n            <Header color=\"teal\" sub content=\"Step 1 - Add Photo\" />\n            <div {...getRootProps()} className=\"dropzone-wrapper\">\n              <input {...getInputProps()} />\n              <Icon name=\"upload\" size=\"big\" />\n              <span>Drop image here or click to add</span>\n            </div>\n          </Grid.Column>\n          <Grid.Column width={1} />\n          <Grid.Column width={4}>\n            <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\n            {files[0] && (\n              <Cropper\n                src={files[0] && URL.createObjectURL(files[0])}\n                style={{ height: 200, width: \"100%\" }}\n                initialAspectRatio={1}\n                preview=\".img-preview\"\n                viewMode={1}\n                guides={true}\n                minCropBoxHeight={10}\n                minCropBoxWidth={10}\n                background={false}\n                responsive={true}\n                autoCropArea={1}\n                checkOrientation={false}\n                onInitialized={(cropper) => (myCropper.current = cropper)}\n              />\n            )}\n          </Grid.Column>\n          <Grid.Column width={1} />\n          <Grid.Column width={4}>\n            <Header sub color=\"teal\" content=\"Step 3 - Preview and Upload\" />\n            {files[0] && (\n              <div\n                style={{\n                  width: \"200px\",\n                  height: \"200px \",\n                }}\n              >\n                <div\n                  className=\"img-preview\"\n                  style={{\n                    width: \"200px\",\n                    height: \"200px \",\n                    overflow: \"hidden\",\n                  }}\n                />\n              </div>\n            )}\n\n            {files[0] && (\n              <Button.Group style={{ width: \"100%\" }}>\n                <Button\n                  style={{ width: \"50%\" }}\n                  onClick={handleUploadProfileImage}\n                  positive\n                  icon=\"check\"\n                  disabled={isUploading}\n                  loading={isUploading}\n                ></Button>\n                <Button\n                  style={{ width: \"50%\" }}\n                  icon=\"close\"\n                  disabled={isUploading}\n                  onClick={() => {\n                    setFiles([]);\n                  }}\n                ></Button>\n              </Button.Group>\n            )}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <Divider />\n      <Header sub color=\"teal\" content=\"All Photos\" />\n\n      <Card.Group itemsPerRow={4}>\n        <Card style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Image\n            src={profile.photoURL}\n            alt=\"\"\n            style={{ minHeight: 150, flex: 1 }}\n          />\n          <Button positive>Main Photo</Button>\n        </Card>\n        {photos &&\n          photos.map((photo) => {\n            return (\n              <Card\n                key={photo.id}\n                style={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n                <Image\n                  src={photo.url}\n                  alt=\"No image\"\n                  style={{ minHeight: 150, flex: 1 }}\n                />\n                <div className=\"ui two buttons\">\n                  <Button\n                    basic\n                    color=\"green\"\n                    onClick={() => {\n                      handleSetMainImage(photo);\n                    }}\n                  >\n                    Main\n                  </Button>\n                  <Button\n                    basic\n                    icon=\"trash\"\n                    color=\"red\"\n                    onClick={() => {\n                      handleDeleteImage(photo);\n                    }}\n                  />\n                </div>\n              </Card>\n            );\n          })}\n      </Card.Group>\n    </Segment>\n  );\n}\n\nexport default PhotosPage;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Segment,\n  Header,\n  Form,\n  Divider,\n  Button,\n  Icon,\n  Message,\n} from \"semantic-ui-react\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport { toastr } from \"react-redux-toastr\";\nimport * as yup from \"yup\";\n\nimport TextInput from \"../../../../app/common/form/text-input\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\n\nconst schema = yup.object().shape({\n  password: yup.string().min(6).required(\"Please enter password\"),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\n});\n\nconst Account = () => {\n  const {\n    register,\n    errors,\n    handleSubmit,\n    formState,\n    reset,\n    setError,\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: \"all\",\n    reValidateMode: \"onChange\",\n  });\n  const provider = useSelector(\n    (state) => state.firebase.auth.providerData[0].providerId\n  );\n  const firebase = useFirebase();\n\n  const updatePassword = async (data) => {\n    try {\n      await firebase.auth().currentUser.updatePassword(data.password);\n      reset();\n      toastr.success(\"Success\", \"Your password has beed updated!\");\n    } catch (err) {\n      setError(\"general\", { message: err.message });\n    }\n  };\n\n  return (\n    <Segment>\n      <Header dividing size=\"large\" content=\"Account\" />\n      {provider === \"password\" && (\n        <div>\n          <Header color=\"teal\" sub content=\"Change password\" />\n          <p>Use this form to update your account settings</p>\n          <Form onSubmit={handleSubmit(updatePassword)}>\n            <TextInput\n              name=\"password\"\n              type=\"password\"\n              pointing=\"left\"\n              placeholder=\"New Password\"\n              register={register({\n                required: { message: \"Required\", value: true },\n              })}\n              error={errors?.password?.message}\n              autoComplete=\"new-password\"\n            />\n            <TextInput\n              name=\"confirmPassword\"\n              type=\"password\"\n              pointing=\"left\"\n              placeholder=\"Confirm Password\"\n              register={register({\n                required: { message: \"Required\", value: true },\n              })}\n              error={errors?.confirmPassword?.message}\n              autoComplete=\"new-password\"\n            />\n            {errors?.general?.message ?? (\n              <Message\n                style={{ color: \"red\" }}\n                error\n                header=\"Update password failed\"\n                list={[errors?.general?.message]}\n              />\n            )}\n            <Divider />\n            <Button\n              disabled={!formState.isValid || formState.isSubmitting}\n              size=\"large\"\n              positive\n              content=\"Update Password\"\n              type=\"submit\"\n              loading={formState.isSubmitting}\n            />\n          </Form>\n        </div>\n      )}\n\n      <Segment>\n        {provider === \"facebook.com\" && (\n          <>\n            <Header color=\"teal\" sub content=\"Facebook Account\" />\n            <p>Please visit Facebook to update your account settings</p>\n            <Button type=\"button\" color=\"facebook\">\n              <Icon name=\"facebook\" />\n              Go to Facebook\n            </Button>\n          </>\n        )}\n        {provider === \"google.com\" && (\n          <>\n            <Header color=\"teal\" sub content=\"Google Account\" />\n            <p>Please visit Google to update your account settings</p>\n            <Button type=\"button\" color=\"google plus\">\n              <Icon name=\"google plus\" />\n              Go to Google\n            </Button>\n          </>\n        )}\n      </Segment>\n    </Segment>\n  );\n};\n\nexport default Account;\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport SettingNav from \"../setting-nav\";\nimport Basic from \"../basic\";\nimport About from \"../about\";\nimport Photo from \"../photo\";\nimport Account from \"../account\";\n\nfunction SettingDashboard() {\n  return (\n    <Grid>\n      <Grid.Column width={12}>\n        <Switch>\n          <Redirect exact from=\"/settings\" to=\"/settings/basic\" />\n          <Route path=\"/settings/basic\" component={Basic} />\n          <Route path=\"/settings/about\" component={About} />\n          <Route path=\"/settings/photo\" component={Photo} />\n          <Route path=\"/settings/account\" component={Account} />\n        </Switch>\n      </Grid.Column>\n      <Grid.Column width={4}>\n        <SettingNav />\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default SettingDashboard;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form, Segment, Grid, Header } from \"semantic-ui-react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\nimport { v4 } from \"uuid\";\nimport { createEvent, updateEvent } from \"../event.action\";\nimport TextInput from \"../../../app/common/form/text-input\";\nimport TextArea from \"../../../app/common/form/text-area\";\nimport SelectInput from \"../../../app/common/form/select-input\";\nimport DateInputPicker from \"../../../app/common/form/date-picker\";\nimport PlaceInput from \"../../../app/common/form/place-input\";\nimport LoadingComponent from \"../../../app/layout/loading\";\n\nconst category = [\n  { key: \"drinks\", text: \"Drinks\", value: \"drinks\" },\n  { key: \"culture\", text: \"Culture\", value: \"culture\" },\n  { key: \"film\", text: \"Film\", value: \"film\" },\n  { key: \"food\", text: \"Food\", value: \"food\" },\n  { key: \"music\", text: \"Music\", value: \"music\" },\n  { key: \"travel\", text: \"Travel\", value: \"travel\" },\n];\n\nfunction EventForm({ match, history }) {\n  const eventId = match.params.id;\n  const [mounted, setMounted] = useState(false);\n\n  const events = useSelector((state) => state.events);\n  const dispatch = useDispatch();\n\n  const event = events.filter((event) => event.id === eventId)[0];\n\n  const {\n    register,\n    handleSubmit,\n    errors,\n    setValue,\n    trigger,\n    watch,\n    reset,\n  } = useForm({\n    defaultValues: { ...event },\n  });\n\n  useEffect(() => {\n    register(\n      { name: \"category\" },\n      { required: { message: \"Please choose a category\", value: true } }\n    );\n    register(\n      { name: \"date\" },\n      { required: { message: \"Please choose a valid date\", value: true } }\n    );\n    register(\n      { name: \"venue\" },\n      { required: { message: \"Please chose a valid venue\", value: \"true\" } }\n    );\n    register({ name: \"lat\" }, { required: true });\n    register({ name: \"lng\" }, { required: true });\n\n    setMounted(true);\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(event) && mounted) {\n      reset({\n        ...event,\n        lat: event.venueLatLng.lat,\n        lng: event.venueLatLng.lng,\n      });\n      setValue(\"lat\", event.venueLatLng.lat);\n      setValue(\"lng\", event.venueLatLng.lng);\n    }\n  }, [event]);\n\n  const onSubmitForm = (data) => {\n    if (!isEmpty(data.id)) {\n      dispatch(updateEvent(data));\n      history.goBack();\n    } else {\n      dispatch(\n        createEvent({\n          ...data,\n          id: v4(),\n          hostPhotoURL: process.env.PUBLIC_URL + \"/assets/user.png\",\n        })\n      );\n      history.push(\"/events\");\n    }\n  };\n\n  return isEmpty(event) && !mounted ? (\n    <LoadingComponent />\n  ) : (\n    <Grid>\n      <Grid.Column width={10}>\n        <Segment>\n          <Form onSubmit={handleSubmit(onSubmitForm)}>\n            <Header sub color=\"teal\">\n              Event Details\n            </Header>\n            <Form.Field>\n              <input ref={register} name=\"id\" hidden />\n            </Form.Field>\n            <TextInput\n              name=\"title\"\n              type=\"text\"\n              placeholder=\"Give your event a title\"\n              register={register({\n                required: { message: \"Please enter event title\", value: true },\n              })}\n              error={errors?.title?.message || \"\"}\n            />\n            <SelectInput\n              options={category}\n              value={watch(\"category\")}\n              name=\"category\"\n              type=\"text\"\n              placeholder=\"What's your event about?\"\n              error={errors?.category?.message || \"\"}\n              setValue={setValue}\n              triggerValidation={trigger}\n            />\n\n            <TextArea\n              rows={6}\n              name=\"description\"\n              type=\"description\"\n              placeholder=\"Tell us about your event\"\n              register={register({\n                required: { message: \"required\", value: true },\n              })}\n              error={errors?.title?.message || \"\"}\n            />\n\n            <Header sub color=\"teal\" style={{ marginBottom: \"1rem\" }}>\n              Event Location Details\n            </Header>\n\n            <PlaceInput\n              name=\"venue\"\n              placeholder=\"Venue event is taking place\"\n              setValue={setValue}\n              error={errors?.venue?.message}\n              value={watch(\"venue\") || \"\"}\n            />\n\n            <DateInputPicker\n              value={watch(\"date\")}\n              name=\"date\"\n              placeholder=\"Date and Time of event\"\n              error={errors?.date?.message || \"\"}\n              setValue={setValue}\n              triggerValidation={trigger}\n              showTimeSelect={true}\n            />\n            <Button positive type=\"submit\">\n              Submit\n            </Button>\n            <Button\n              style={{ marginLeft: \"1rem\" }}\n              onClick={() => {\n                history.goBack();\n              }}\n              type=\"button\"\n            >\n              Cancel\n            </Button>\n          </Form>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default EventForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Segment,\n  Container,\n  Header,\n  Image,\n  Button,\n  Icon,\n} from \"semantic-ui-react\";\n\nfunction Home() {\n  return (\n    <Segment inverted textAlign=\"center\" vertical className=\"homepage\">\n      <Container text>\n        <Header as=\"h1\" inverted>\n          <Image\n            size=\"massive\"\n            src={process.env.PUBLIC_URL + \"/assets/logo.png\"}\n            alt=\"logo\"\n            style={{ marginBottom: 12 }}\n          />\n          Re-vents\n        </Header>\n        <Button size=\"huge\" inverted as={Link} to=\"/events\">\n          Get started\n          <Icon name=\"right arrow\" inverted />\n        </Button>\n      </Container>\n    </Segment>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport { socialLogin } from \"../auth.action\";\n\nfunction SocialLogin() {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Button\n        type=\"button\"\n        style={{ marginBottom: \"10px\" }}\n        fluid\n        color=\"facebook\"\n        onClick={() => {\n          dispatch(socialLogin(\"facebook\"));\n        }}\n      >\n        <Icon name=\"facebook\" /> Login with Facebook\n      </Button>\n      <Button\n        type=\"button\"\n        fluid\n        style={{ marginBottom: \"10px\" }}\n        color=\"google plus\"\n        onClick={() => {\n          dispatch(socialLogin(\"google\"));\n        }}\n      >\n        <Icon name=\"google plus\" />\n        Login with Google\n      </Button>\n      <Button\n        type=\"button\"\n        fluid\n        style={{ marginBottom: \"10px\" }}\n        onClick={() => {\n          dispatch(socialLogin(\"github\"));\n        }}\n      >\n        <Icon name=\"github\" />\n        Login with Github\n      </Button>\n      {/* <Button\n        type=\"button\"\n        fluid\n        color=\"twitter\"\n        onClick={() => {\n          dispatch(socialLogin(\"twitter\"));\n        }}\n      >\n        <Icon name=\"twitter\" />\n        Login with Twitter\n      </Button> */}\n    </div>\n  );\n}\n\nexport default SocialLogin;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Segment, Button, Message, Divider } from \"semantic-ui-react\";\nimport TextInput from \"../../../app/common/form/text-input\";\nimport { login } from \"../auth.action\";\nimport SocialLogin from \"../social-login\";\n\nconst LoginForm = () => {\n  const { register, handleSubmit, formState } = useForm({\n    mode: \"all\",\n    reValidateMode: \"onChange\",\n  });\n  const { logInError } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const handleLogIn = (data) => {\n    dispatch(login(data));\n  };\n\n  return (\n    <Form error size=\"large\" onSubmit={handleSubmit(handleLogIn)}>\n      <Segment>\n        <TextInput\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email Address\"\n          register={register({\n            required: { message: \"Required\", value: true },\n          })}\n        />\n        <TextInput\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"password\"\n          autoComplete=\"current-password\"\n          register={register({\n            required: { message: \"Required\", value: true },\n          })}\n        />\n        {logInError && (\n          <Message error header=\"Log in failed\" list={[logInError?.message]} />\n        )}\n        <Button\n          fluid\n          size=\"large\"\n          color=\"teal\"\n          disabled={!formState.isValid || formState.isSubmitting}\n          loading={formState.isSubmitting}\n        >\n          Login\n        </Button>\n        <Divider content=\"Or\" horizontal />\n        <SocialLogin />\n      </Segment>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Segment, Button, Message, Divider } from \"semantic-ui-react\";\nimport TextInput from \"../../../app/common/form/text-input\";\nimport { registerUser } from \"../auth.action\";\nimport SocialLogin from \"../social-login\";\n\nconst RegisterForm = () => {\n  const { register, handleSubmit, formState } = useForm({\n    mode: \"all\",\n    reValidateMode: \"onChange\",\n  });\n  const { registerUserError } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const handleRegister = (data) => {\n    dispatch(registerUser(data));\n  };\n  return (\n    <Form error size=\"large\" onSubmit={handleSubmit(handleRegister)}>\n      <Segment>\n        <TextInput\n          name=\"displayName\"\n          type=\"text\"\n          placeholder=\"Know As\"\n          register={register({\n            required: { message: \"Required\", value: true },\n          })}\n        />\n        <TextInput\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          register={register({\n            required: { message: \"Required\", value: true },\n          })}\n        />\n        <TextInput\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          register={register({\n            required: { message: \"Required\", value: true },\n            minLength: { message: \"At lease 6 characters\", value: 6 },\n          })}\n        />\n        {registerUserError && (\n          <Message\n            error\n            header=\"Register failed\"\n            list={[registerUserError.message]}\n          />\n        )}\n        <Button\n          fluid\n          size=\"large\"\n          color=\"teal\"\n          disabled={!formState.isValid || formState.isSubmitting}\n          loading={formState.isSubmitting}\n        >\n          Register\n        </Button>\n        <Divider content=\"Or\" horizontal />\n        <SocialLogin />\n      </Segment>\n    </Form>\n  );\n};\n\nexport default RegisterForm;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport LogInModal from \"./login-modal\";\nimport RegisterModal from \"./register-modal\";\n\nconst modalLookUp = {\n  LogInModal,\n  RegisterModal,\n};\n\nfunction ModalManager() {\n  const modals = useSelector((state) => state.modals);\n\n  let renderedModal = null;\n  if (modals) {\n    const { modalType, modalProps } = modals;\n    const ModalComponent = modalLookUp[modalType];\n    renderedModal = <ModalComponent {...modalProps} />;\n  }\n  return renderedModal;\n}\n\nexport default ModalManager;\n","import React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\n\nimport LoginForm from \"../auth/log-in/login-form\";\nimport { useDispatch } from \"react-redux\";\nimport { closeModal } from \"./modal.action\";\n\nconst LoginModal = () => {\n  const dispatch = useDispatch();\n  return (\n    <Modal\n      size=\"mini\"\n      open={true}\n      onClose={() => {\n        dispatch(closeModal());\n      }}\n    >\n      <Modal.Header>Login to Re-vents</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <LoginForm />\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default LoginModal;\n","import React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\n\nimport RegisterForm from \"../auth/register/register-form\";\nimport { useDispatch } from \"react-redux\";\nimport { closeModal } from \"./modal.action\";\n\nconst RegisterModal = () => {\n  const dispatch = useDispatch();\n  return (\n    <Modal\n      size=\"mini\"\n      open={true}\n      onClose={() => {\n        dispatch(closeModal());\n      }}\n    >\n      <Modal.Header>Sign Up to Re-vents</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <RegisterForm />\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default RegisterModal;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { isLoaded } from \"react-redux-firebase\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth))\n    return (\n      <Dimmer active inverted>\n        <Loader inverted content=\"Loading...\" />\n      </Dimmer>\n    );\n  return children;\n}\n\nexport default AuthIsLoaded;\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport EventDashboard from \"../../features/event/event-dashboard\";\nimport NavBar from \"../../features/nav/nav-bar\";\nimport EventDetail from \"../../features/event/event-detail\";\nimport PeopleDashboard from \"../../features/user/people-dashboard\";\nimport UserDetail from \"../../features/user/user-detail\";\nimport SettingDashboard from \"../../features/user/settings/setting-dashboard\";\nimport EventForm from \"../../features/event/event-form\";\nimport Home from \"../../features/home\";\nimport ModalManager from \"../../features/modal/modal-manager\";\nimport AuthIsLoaded from \"../utils/auth-loaded\";\n\nfunction App() {\n  return (\n    <AuthIsLoaded>\n      <div>\n        <ModalManager />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n        </Switch>\n        <Route\n          path=\"/(.+)\"\n          render={() => (\n            <div>\n              <NavBar />\n              <Container style={{ marginTop: \"5rem\" }}>\n                <Switch>\n                  <Route path=\"/events\" exact component={EventDashboard} />\n                  <Route path=\"/events/:id\" component={EventDetail} />\n                  <Route path=\"/manage/:id\" component={EventForm} />\n                  <Route path=\"/people\" component={PeopleDashboard} />\n                  <Route path=\"/profile/:id\" component={UserDetail} />\n                  <Route path=\"/settings\" component={SettingDashboard} />\n                  <Route path=\"/create-event\" component={EventForm} />\n                </Switch>\n              </Container>\n            </div>\n          )}\n        />\n      </div>\n    </AuthIsLoaded>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { handleActions } from \"redux-actions\";\nimport { pick } from \"lodash\";\nimport {\n  createEventType,\n  deleteEvent,\n  fetchEvents,\n  updateEventType,\n} from \"./event.action\";\n\nconst initialState = [];\n\nexport const eventReducer = handleActions(\n  {\n    [fetchEvents]: (state, { payload }) => {\n      return payload;\n    },\n    [createEventType]: (state, { payload }) => {\n      return [\n        ...state,\n        {\n          ...pick(payload, [\n            \"id\",\n            \"title\",\n            \"category\",\n            \"description\",\n            \"date\",\n            \"venue\",\n          ]),\n          venueLatLng: {\n            lat: payload.lat,\n            lng: payload.lng,\n          },\n        },\n      ];\n    },\n    [updateEventType]: (state, { payload }) => {\n      return state.map((event) => {\n        if (event.id === payload.id) {\n          return Object.assign(event, {\n            ...pick(payload, [\n              \"id\",\n              \"title\",\n              \"category\",\n              \"description\",\n              \"date\",\n              \"venue\",\n            ]),\n            venueLatLng: {\n              lat: payload.lat,\n              lng: payload.lng,\n            },\n          });\n        }\n        return event;\n      });\n    },\n    [deleteEvent]: (state, { payload }) => {\n      return [...state.filter((event) => event.id !== payload)];\n    },\n  },\n  initialState\n);\n","import { handleActions } from \"redux-actions\";\nimport { closeModal, openModal } from \"./modal.action\";\n\nconst initialState = null;\n\nexport const modalReducer = handleActions(\n  {\n    [openModal]: (state, { payload }) => {\n      return payload;\n    },\n    [closeModal]: () => {\n      return null;\n    },\n  },\n  initialState\n);\n","import { handleActions } from \"redux-actions\";\nimport { logInFailed, registerUserFailed, resetAuthState } from \"./auth.action\";\n\nconst initialState = {\n  logInError: null,\n  registerUserError: null,\n};\n\nexport const authReducer = handleActions(\n  {\n    [logInFailed]: (state, { payload }) => {\n      return { ...state, logInError: payload };\n    },\n    [registerUserFailed]: (state, { payload }) => {\n      return { ...state, registerUserError: payload };\n    },\n    [resetAuthState]: (state) => initialState,\n  },\n  initialState\n);\n","import { handleActions } from \"redux-actions\";\nimport {\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"./async.action\";\n\nconst initialState = {\n  loading: false,\n};\n\nexport const asyncReducer = handleActions(\n  {\n    [asyncActionStart]: (state) => {\n      return { ...state, loading: true };\n    },\n    [asyncActionFinish]: (state) => {\n      return { ...state, loading: false };\n    },\n    [asyncActionError]: (state) => {\n      return { ...state, loading: false };\n    },\n  },\n  initialState\n);\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEARUREMENT_ID,\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n\nexport default firebase;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport { eventReducer } from \"../../features/event/event.reducer\";\nimport { modalReducer } from \"../../features/modal/modal.reducer\";\nimport { authReducer } from \"../../features/auth/auth.reducer\";\nimport { asyncReducer } from \"../../features/async/async.reducer\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nimport { getFirebase, firebaseReducer } from \"react-redux-firebase\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  firestoreReducer,\n} from \"redux-firestore\";\nimport firebase from \"../config/firebase\";\n\nconst rootReducer = combineReducers({\n  events: eventReducer,\n  modals: modalReducer,\n  auth: authReducer,\n  async: asyncReducer,\n  toastr: toastrReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nconst middlewares = [thunk.withExtraArgument({ getFirebase, getFirestore })];\nconst middlewareEnhancer = applyMiddleware(...middlewares);\nconst storeEnhancer = [middlewareEnhancer];\nconst composedEnhander = composeWithDevTools(\n  ...storeEnhancer,\n  reduxFirestore(firebase)\n);\n\nconst store = createStore(rootReducer, composedEnhander);\n\nexport { store };\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop({ children }) {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return children;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./app/layout/app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./app/store/store\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport firebase from \"./app/config/firebase\";\n\nimport ReduxToastr from \"react-redux-toastr\";\nimport ScrollToTop from \"./app/utils/scroll-to-top\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-redux-toastr/lib/css/react-redux-toastr.min.css\";\nimport \"cropperjs/dist/cropper.css\";\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  attachAuthIsReady: true,\n  firebaseStateName: \"firebase\",\n  useFirestoreForProfile: true,\n  profileFactory: (userData, profileData, firebase) => {\n    const { displayName } = userData;\n    const { email, avatarUrl } = profileData;\n\n    return {\n      displayName,\n      email,\n      photoURL: avatarUrl,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    };\n  },\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <HashRouter>\n        <ScrollToTop>\n          <ReduxToastr\n            timeOut={4000}\n            position=\"top-right\"\n            transitionIn=\"fadeIn\"\n            transitionOut=\"fadeOut\"\n          />\n          <App />\n        </ScrollToTop>\n      </HashRouter>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}