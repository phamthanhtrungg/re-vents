{"version":3,"sources":["features/event/event-list/event-list-attendee.jsx","features/event/event-list/event-list-item.jsx","features/event/event-list/event-list.jsx","features/async/async.action.jsx","app/utils/helper.js","features/event/event.action.jsx","app/layout/loading.jsx","features/event/event-activity/index.jsx","features/event/event-dashboard/index.jsx","features/modal/modal.action.jsx","features/auth/auth.action.jsx","features/menu/sign-out/index.jsx","features/menu/sign-in/index.jsx","features/nav/nav-bar/index.jsx","features/event/event-detail/event-detail-chat.jsx","features/event/event-detail/event-detail-header.jsx","features/event/event-detail/event-detail-map.jsx","features/event/event-detail/event-detail-info.jsx","features/event/event-detail/event-detail-sidebar.jsx","features/event/event-detail/index.jsx","features/user/people-dashboard/index.jsx","features/user/user-detail/index.jsx","features/user/settings/setting-nav/index.jsx","app/common/form/date-picker.jsx","app/common/form/widget.jsx","app/common/form/connector.jsx","app/common/form/place-input.jsx","app/common/form/radio-input.jsx","app/common/form/text-input.jsx","features/user/settings/basic/index.jsx","app/common/form/select-input.jsx","app/common/form/text-area.jsx","features/user/settings/about/index.jsx","features/user/settings/photo/index.jsx","features/user/settings/account/index.jsx","features/user/settings/setting-dashboard/index.jsx","features/event/event-form/index.jsx","features/home/index.jsx","features/auth/social-login/index.jsx","features/auth/log-in/login-form.jsx","features/auth/register/register-form.jsx","features/modal/modal-manager.jsx","features/modal/login-modal.jsx","features/modal/register-modal.jsx","app/utils/auth-loaded.jsx","app/layout/app.jsx","reportWebVitals.js","features/modal/modal.reducer.jsx","features/auth/auth.reducer.jsx","features/async/async.reducer.jsx","app/config/firebase.js","app/store/store.js","app/utils/scroll-to-top.jsx","index.js"],"names":["EventListAttendee","photoURL","attendeeId","List","Item","Image","as","Link","to","size","circular","src","alt","EventListItem","event","handleDeleteEvent","title","date","description","venue","hostedBy","hostPhotoURL","attendees","cancelled","auth","useSelector","state","firebase","Segment","Group","Content","Header","Description","hostUid","href","Label","ribbon","color","style","top","Icon","name","moment","toDate","fromNow","secondary","horizontal","Object","keys","map","attendeeKey","key","clearing","uid","Button","floated","onClick","id","EventList","events","i","asyncActionStart","createAction","asyncActionFinish","asyncActionError","createNewEvent","user","venueLatLng","lat","lng","process","displayName","created","Date","now","going","joinDate","host","createEventType","LoadingComponent","Dimmer","active","inverted","Loader","content","EventActivity","attached","EventDashboard","useFirestoreConnect","collection","storeAs","firestore","ordered","eventKeys","data","dispatch","useDispatch","Grid","Column","width","values","eventId","_dispatch","_getState","a","getFirebase","getFirestore","currentUser","delete","toastr","success","console","log","error","deleteEvent","openModal","closeModal","registerUserFailed","logInFailed","resetAuthState","socialLogin","selectedProvider","login","type","provider","SignOutMenu","Menu","position","basic","modalType","marginLeft","SignInMenu","profile","useFirebase","history","useHistory","avatar","spaced","Dropdown","pointing","text","icon","signOut","push","NavBar","fixed","Container","header","marginRight","NavLink","positive","isLoaded","isEmpty","EventDetailChat","eventImageTextStyle","bottom","left","EventDetailHeader","isHost","isGoing","padding","fluid","format","fontWeight","getState","update","FieldValue","cancelGoingToEvent","attendee","set","userUid","eventDate","goingToEvent","Marker","EventDetailMap","props","height","bootstrapURLKeys","defaultCenter","center","defaultZoom","zoom","EventDetailInfo","useState","showMap","setShowMap","verticalAlign","EventDetailSideBar","textAlign","border","length","divided","EventDetail","match","params","doc","eventDetail","useFirestore","useEffect","get","exists","findEvent","some","PeopleDashboard","UserDetailedPage","subcollections","photos","profiles","occupation","dateOfBirth","diff","origin","columns","createdAt","toDateString","interest","interests","photo","placeholder","rounded","url","Card","itemsPerRow","Meta","SettingNav","vertical","Row","DateInputPicker","setValue","triggerValidation","value","rest","FormField","selected","onChange","placeholderText","dateFormat","timeFormat","showYearDropDown","dropdownMode","connect","createConnector","getProvidedProps","refine","searchState","nextValue","aroundLatLng","boundingBox","getSearchParameters","searchParameters","currentRefinement","defaultRefinement","setQueryParameter","createRef","c","element","this","autocomplete","places","container","useDeviceLocation","setVal","on","handleChange","suggestion","latlng","marginBottom","ref","Component","searchClient","algoliasearch","PlaceInput","Form","Field","InstantSearch","indexName","e","RadioInput","register","label","className","TextInput","fieldProps","otherProps","Basics","mounted","setMounted","useForm","mode","defaultValues","formState","errors","trigger","getValues","handleSubmit","watch","setError","gender","handleUpdateUserProfile","userInfo","updateProfile","message","dividing","onSubmit","required","inline","showMonthDropdown","showYearDropdown","maxDate","subtract","general","Message","list","Divider","loading","isSubmitting","SelectInput","options","multiple","Select","TextArea","About","status","about","handleUpdateAboutInfo","marginTop","rows","PhotosPage","files","setFiles","isUploading","setIsUploading","myCropper","useRef","useDropzone","onDrop","acceptFiles","accept","getRootProps","getInputProps","handleUploadProfileImage","path","current","getCroppedCanvas","toBlob","blob","uploadFile","uploadedFile","uploadTaskSnapshot","getDownloadURL","downloadURL","add","handleDeleteImage","deleteFile","handleSetMainImage","sub","URL","createObjectURL","initialAspectRatio","preview","viewMode","guides","minCropBoxHeight","minCropBoxWidth","background","responsive","autoCropArea","checkOrientation","onInitialized","cropper","overflow","disabled","display","flexDirection","minHeight","flex","schema","yup","shape","password","min","confirmPassword","oneOf","Account","resolver","yupResolver","reValidateMode","reset","providerData","providerId","updatePassword","autoComplete","isValid","SettingDashboard","exact","from","component","Basic","Photo","category","EventForm","setEvent","newEvent","createdEvent","createEvent","updateEvent","goBack","hidden","showTimeSelect","cancelToggle","Home","SocialLogin","LoginForm","logInError","signInWithEmailAndPassword","email","RegisterForm","registerUserError","createUserWithEmailAndPassword","newUser","serverTimestamp","minLength","modalLookUp","LogInModal","Modal","open","onClose","RegisterModal","ModalManager","modals","renderedModal","modalProps","ModalComponent","AuthIsLoaded","children","App","render","UserDetail","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","modalReducer","handleActions","payload","initialState","authReducer","asyncReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","rootReducer","combineReducers","async","toastrReducer","firebaseReducer","firestoreReducer","middlewares","thunk","withExtraArgument","storeEnhancer","applyMiddleware","composedEnhander","composeWithDevTools","reduxFirestore","store","createStore","ScrollToTop","pathname","useLocation","window","scrollTo","rrfProps","config","userProfile","attachAuthIsReady","firebaseStateName","useFirestoreForProfile","profileFactory","userData","profileData","avatarUrl","createFirestoreInstance","ReactDOM","timeOut","transitionIn","transitionOut","document","getElementById"],"mappings":"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","file":"static/js/main.cb450f8d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { List, Image } from \"semantic-ui-react\";\n\nfunction EventListAttendee({ photoURL, attendeeId }) {\n  return (\n    <List.Item>\n      <Image\n        as={Link}\n        to={`/profile/${attendeeId}`}\n        size=\"mini\"\n        circular\n        src={photoURL}\n        alt=\"\"\n      />\n    </List.Item>\n  );\n}\n\nexport default EventListAttendee;\n","import React from \"react\";\nimport { Button, Icon, Item, List, Segment, Label } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport EventListAttendee from \"./event-list-attendee\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\n\nfunction EventListItem({ event, handleDeleteEvent }) {\n  const {\n    title,\n    date,\n    description,\n    venue,\n    hostedBy,\n    hostPhotoURL,\n    attendees,\n    cancelled,\n  } = event;\n  const auth = useSelector((state) => state.firebase.auth);\n  return (\n    <Segment.Group>\n      <Segment>\n        <Item.Group>\n          <Item>\n            <Item.Image size=\"tiny\" circular src={hostPhotoURL} alt=\"\" />\n            <Item.Content>\n              <Item.Header>{title}</Item.Header>\n              <Item.Description>\n                Hosted by{\" \"}\n                <Link to={`/profile/${event.hostUid}`} href=\"/\">\n                  {hostedBy}\n                </Link>\n              </Item.Description>\n              {cancelled && (\n                <Label ribbon=\"right\" color=\"red\" style={{ top: \"-40px\" }}>\n                  This event has been cancelled\n                </Label>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" /> {moment(date.toDate()).fromNow()} |\n          <Icon name=\"marker\" /> {venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <List horizontal>\n          {attendees &&\n            Object.keys(attendees).map((attendeeKey) => (\n              <EventListAttendee\n                key={attendeeKey}\n                {...attendees[attendeeKey]}\n                attendeeId={attendeeKey}\n              />\n            ))}\n        </List>\n      </Segment>\n      <Segment clearing>\n        <span>{description}</span>\n        {event.hostUid === auth.uid && (\n          <Button\n            color=\"red\"\n            floated=\"right\"\n            onClick={() => handleDeleteEvent(event.id)}\n          >\n            Delete\n          </Button>\n        )}\n        <Button\n          as={Link}\n          to={`/events/${event.id}`}\n          color=\"teal\"\n          floated=\"right\"\n        >\n          View\n        </Button>\n      </Segment>\n    </Segment.Group>\n  );\n}\n\nexport default EventListItem;\n","import React from \"react\";\nimport EventListItem from \"./event-list-item\";\n\nfunction EventList({ events, handleDeleteEvent }) {\n  return (\n    <div>\n      <h1>Event List</h1>\n      {events.map((event, i) => {\n        return (\n          event && (\n            <EventListItem\n              key={event.id}\n              event={event}\n              handleDeleteEvent={handleDeleteEvent}\n            />\n          )\n        );\n      })}\n    </div>\n  );\n}\n\nexport default EventList;\n","import { createAction } from \"redux-actions\";\n\nexport const asyncActionStart = createAction(\"ASYNC_ACTION_START\");\nexport const asyncActionFinish = createAction(\"ASYNC_ACTION_FINISH\");\nexport const asyncActionError = createAction(\"ASYNC_ACTION_ERROR\");\n","import moment from \"moment\";\n\nexport const createNewEvent = (user, photoURL, event) => {\n  event.date = moment(event.date).toDate();\n\n  return {\n    ...event,\n    venueLatLng: {\n      lat: event.lat,\n      lng: event.lng,\n    },\n    hostUid: user.uid,\n    hostPhotoURL: photoURL || process.env.PUBLIC_URL + \"/assets/user.png\",\n    hostedBy: user.displayName,\n    created: Date.now(),\n    attendees: {\n      [user.uid]: {\n        going: true,\n        joinDate: Date.now(),\n        photoURL: photoURL || process.env.PUBLIC_URL + \"/assets/user.png\",\n        displayName: user.displayName,\n        host: true,\n      },\n    },\n  };\n};\n","import { createAction } from \"redux-actions\";\nimport { toastr } from \"react-redux-toastr\";\nimport { fetchData } from \"../../app/data/mock-api\";\nimport {\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"../async/async.action\";\nimport { createNewEvent } from \"../../app/utils/helper\";\n\nexport const fetchEvents = createAction(\"FETCH_EVENTS\");\nexport const createEventType = createAction(\"CREATE_EVENT\");\nexport const updateEventType = createAction(\"UPDATE_EVENT\");\n\nexport const deleteEvent = (eventId) => {\n  return async (_dispatch, _getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const user = getFirebase().auth().currentUser;\n    try {\n      await firestore.delete(`event_attendee/${eventId}_${user.uid}`);\n      await firestore.delete(`events/${eventId}`);\n\n      toastr.success(\"Success\", \"Event has beed deleted\");\n    } catch (err) {\n      console.log(err);\n      toastr.error(\"Oops\", \"Something went wrong\");\n    }\n  };\n};\n\nexport const createEvent = (event) => {\n  return async (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const user = getFirebase().auth().currentUser;\n    const photoURL = getState().firebase.profile.photoURL;\n    let newEvent = createNewEvent(user, photoURL, event);\n    try {\n      let createdEvent = await firestore.add(\n        { collection: \"events\" },\n        newEvent\n      );\n\n      await firestore.set(`event_attendee/${createdEvent.id}_${user.uid}`, {\n        eventId: createdEvent.id,\n        userUid: user.uid,\n        eventDate: event.date,\n        host: true,\n      });\n      dispatch(createEventType(event));\n      toastr.success(\"Success\", \"Event has beed created\");\n    } catch (err) {\n      console.log(err);\n      toastr.error(\"Oops\", \"Something went wrong\");\n    }\n  };\n};\nexport const updateEvent = (event) => {\n  return async (dispatch, _getState, { getFirestore }) => {\n    const firestore = getFirestore();\n\n    try {\n      await firestore.update(`events/${event.id}`, {\n        ...event,\n        venueLatLng: {\n          lat: event.lat,\n          lng: event.lng,\n        },\n      });\n\n      dispatch(createEventType(event));\n      toastr.success(\"Success\", \"Event has beed updated\");\n    } catch (err) {\n      console.log(\"my event\", event);\n      console.log(err);\n      toastr.error(\"Oops\", \"Something went wrong\");\n    }\n  };\n};\n\nexport const loadEvents = () => {\n  return async (dispatch) => {\n    try {\n      dispatch(asyncActionStart());\n      let events = await fetchData();\n      dispatch(fetchEvents(events));\n      dispatch(asyncActionFinish());\n    } catch (err) {\n      dispatch(asyncActionError(err));\n    }\n  };\n};\n\nexport const cancelToggle = (cancelled, eventId) => {\n  return async (_dispatch, _getState, { getFirestore }) => {\n    const firestore = getFirestore();\n    try {\n      await firestore.update(`events/${eventId}`, {\n        cancelled,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n","import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\nfunction LoadingComponent() {\n  return (\n    <Dimmer active inverted>\n      <Loader inverted content=\"Loading\" />\n    </Dimmer>\n  );\n}\n\nexport default LoadingComponent;\n","import React from \"react\";\nimport { Segment, Header } from \"semantic-ui-react\";\n\nfunction EventActivity() {\n  return (\n    <div>\n      <Header attached=\"top\" content=\"Recent Activities\" />\n      <Segment attached>\n        <p>Recent activities</p>\n      </Segment>\n    </div>\n  );\n}\n\nexport default EventActivity;\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport EventList from \"../event-list/event-list\";\nimport { deleteEvent } from \"../event.action\";\nimport LoadingComponent from \"../../../app/layout/loading\";\nimport EventActivity from \"../event-activity\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\n\nfunction EventDashboard() {\n  useFirestoreConnect([\n    {\n      collection: \"events\",\n      storeAs: \"events\",\n    },\n  ]);\n\n  const events = useSelector((state) => state.firestore.ordered?.events);\n  const eventKeys = useSelector((state) =>\n    Object.keys(state.firestore.data?.events || {})\n  );\n  const dispatch = useDispatch();\n\n  const handleDeleteEvent = (eventId) => {\n    dispatch(deleteEvent(eventId));\n  };\n\n  return !events || !eventKeys ? (\n    <LoadingComponent />\n  ) : (\n    <Grid>\n      <Grid.Column width={10}>\n        <EventList\n          events={Object.values(events).map((event, i) => {\n            return (\n              event && {\n                ...event,\n                id: eventKeys[i],\n              }\n            );\n          })}\n          handleDeleteEvent={handleDeleteEvent}\n        />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <EventActivity />\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default EventDashboard;\n","import { createAction } from \"redux-actions\";\n\nexport const openModal = createAction(\"OPEN_MODAL\");\nexport const closeModal = createAction(\"CLOSE_MODAL\");\n","import { toastr } from \"react-redux-toastr\";\nimport { createAction } from \"redux-actions\";\nimport { closeModal } from \"../modal/modal.action\";\n\nexport const registerUserFailed = createAction(\"REGISTER_USER_FAILED\");\nexport const logInFailed = createAction(\"LOG_IN_FAILED\");\nexport const resetAuthState = createAction(\"RESET_AUTH_STATE\");\n\nexport const login = (data) => {\n  return async (dispatch, _getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    try {\n      await firebase\n        .auth()\n        .signInWithEmailAndPassword(data.email, data.password);\n      dispatch(closeModal());\n    } catch (error) {\n      dispatch(logInFailed(error));\n    }\n  };\n};\n\nexport const registerUser = (user) => {\n  return async (dispatch, _getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    const firestore = firebase.firestore();\n    try {\n      //create user in auth\n      await firebase\n        .auth()\n        .createUserWithEmailAndPassword(user.email, user.password);\n\n      //update profile\n      await firebase.auth().currentUser.updateProfile({\n        displayName: user.displayName,\n      });\n\n      //create new profile in firestore\n      const newUser = {\n        displayName: user.displayName,\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      };\n\n      await firestore\n        .collection(\"users\")\n        .doc(`/${firebase.auth().currentUser.uid}`)\n        .set({ ...newUser });\n      dispatch(closeModal());\n    } catch (error) {\n      dispatch(registerUserFailed(error));\n    }\n  };\n};\n\nexport const socialLogin = (selectedProvider) => {\n  return async (dispatch, _getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    try {\n      dispatch(closeModal());\n      await firebase.login({\n        type: \"popup\",\n        provider: selectedProvider,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\nexport const goingToEvent = (event) => {\n  return async (_dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const user = getFirebase().auth().currentUser;\n    const photoURL =\n      getState().firebase.profile.photoURL ||\n      process.env.PUBLIC_URL + \"/assets/user.png\";\n    const attendee = {\n      going: true,\n      joinDate: Date.now(),\n      photoURL,\n      displayName: user.displayName,\n      host: false,\n    };\n    try {\n      await firestore.update(`events/${event.id}`, {\n        [`attendees.${user.uid}`]: attendee,\n      });\n      await firestore.set(`event_attendee/${event.id}_${user.uid}`, {\n        eventId: event.id,\n        userUid: user.uid,\n        eventDate: event.date,\n        host: false,\n      });\n      toastr.success(\"Success\", \"Join event successfully\");\n    } catch (err) {\n      toastr.error(\"Oops\", \"Going to event failed\");\n      console.log(err);\n    }\n  };\n};\n\nexport const cancelGoingToEvent = (event) => {\n  return async (_dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const user = getFirebase().auth().currentUser;\n\n    try {\n      await firestore.update(`events/${event.id}`, {\n        [`attendees.${user.uid}`]: firestore.FieldValue.delete(),\n      });\n      await firestore.delete(`event_attendee/${event.id}_${user.uid}`);\n      toastr.success(\"Success\", \"Cancel event successfully\");\n    } catch (err) {\n      toastr.error(\"Oops\", \"Going to event failed\");\n      console.log(err);\n    }\n  };\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Menu, Button } from \"semantic-ui-react\";\nimport { resetAuthState } from \"../../auth/auth.action\";\nimport { openModal } from \"../../modal/modal.action\";\n\nfunction SignOutMenu() {\n  const dispatch = useDispatch();\n  return (\n    <Menu.Item position=\"right\">\n      <Button\n        basic\n        inverted\n        content=\"Login\"\n        onClick={() => {\n          dispatch(resetAuthState());\n          dispatch(openModal({ modalType: \"LogInModal\" }));\n        }}\n      />\n      <Button\n        basic\n        inverted\n        content=\"Register\"\n        style={{ marginLeft: \"1rem\" }}\n        onClick={() => {\n          dispatch(openModal({ modalType: \"RegisterModal\" }));\n        }}\n      />\n    </Menu.Item>\n  );\n}\n\nexport default SignOutMenu;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Menu, Image, Dropdown } from \"semantic-ui-react\";\nimport { resetAuthState } from \"../../auth/auth.action\";\n\nfunction SignInMenu() {\n  const { profile, auth } = useSelector((state) => state.firebase);\n  const dispatch = useDispatch();\n  const firebase = useFirebase();\n  const history = useHistory();\n  return (\n    <Menu.Item position=\"right\">\n      <Image\n        avatar\n        spaced=\"right\"\n        src={profile.photoURL || process.env.PUBLIC_URL + \"/assets/user.png\"}\n        alt=\"\"\n      />\n      <Dropdown pointing=\"top left\" text={profile.displayName}>\n        <Dropdown.Menu>\n          <Dropdown.Item\n            as={Link}\n            to=\"/create-event\"\n            text=\"Create Event\"\n            icon=\"plus\"\n          />\n          <Dropdown.Item text=\"My Events\" icon=\"calendar\" />\n          <Dropdown.Item text=\"My Network\" icon=\"users\" />\n          <Dropdown.Item\n            as={Link}\n            to={`/profile/${auth.uid}`}\n            text=\"My Profile\"\n            icon=\"user\"\n          />\n          <Dropdown.Item\n            as={Link}\n            to=\"/settings\"\n            text=\"Settings\"\n            icon=\"settings\"\n          />\n          <Dropdown.Item\n            text=\"Sign Out\"\n            icon=\"power\"\n            onClick={() => {\n              firebase.auth().signOut();\n              history.push(\"/\");\n              dispatch(resetAuthState());\n            }}\n          />\n        </Dropdown.Menu>\n      </Dropdown>\n    </Menu.Item>\n  );\n}\n\nexport default SignInMenu;\n","import React from \"react\";\nimport { Button, Container, Menu } from \"semantic-ui-react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport SignOutMenu from \"../../menu/sign-out\";\nimport SignInMenu from \"../../menu/sign-in\";\nimport { useSelector } from \"react-redux\";\n\nfunction NavBar() {\n  const { auth } = useSelector((state) => state.firebase);\n\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item header as={Link} to=\"/\">\n          <img\n            src={process.env.PUBLIC_URL + \"/assets/logo.png\"}\n            alt=\"Logo\"\n            style={{ marginRight: \"0.5rem\" }}\n          />\n          Re-vents\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/events\" name=\"Events\" />\n        <Menu.Item as={NavLink} to=\"/people\" name=\"People\" />\n        <Menu.Item>\n          <Button\n            floated=\"right\"\n            as={Link}\n            to=\"/create-event\"\n            positive\n            inverted\n            content=\"Create Event\"\n          />\n        </Menu.Item>\n        {auth.isLoaded && !auth.isEmpty ? <SignInMenu /> : <SignOutMenu />}\n      </Container>\n    </Menu>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\n\nfunction EventDetailChat() {\n  return (\n    <div>\n      <h1>event chat</h1>\n    </div>\n  );\n}\n\nexport default EventDetailChat;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Image, Item, Button, Header } from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport { useDispatch } from \"react-redux\";\nimport { cancelGoingToEvent, goingToEvent } from \"../../auth/auth.action\";\n\nconst eventImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  color: \"white\",\n};\n\nfunction EventDetailHeader({ event, isHost, isGoing }) {\n  const dispatch = useDispatch();\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        <Image src={process.env.PUBLIC_URL + \"/assets/pho.jpg\"} fluid alt=\"\" />\n\n        <Segment basic style={eventImageTextStyle}>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={event.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{moment(event.date.toDate()).format(\"DD/MM/yyyy HH:mm\")}</p>\n                <p>\n                  Hosted by{\" \"}\n                  <Link\n                    to={`/profile/${event.hostUid}`}\n                    style={{ color: \"white\", fontWeight: \"bold\" }}\n                  >\n                    {event.hostedBy}\n                  </Link>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n\n      <Segment attached=\"bottom\">\n        {!isHost && (\n          <>\n            {isGoing ? (\n              <Button\n                onClick={() => {\n                  dispatch(cancelGoingToEvent(event));\n                }}\n              >\n                Cancel My Place\n              </Button>\n            ) : (\n              <Button\n                color=\"teal\"\n                onClick={() => {\n                  dispatch(goingToEvent(event));\n                }}\n              >\n                JOIN THIS EVENT\n              </Button>\n            )}\n          </>\n        )}\n\n        {isHost && (\n          <Button color=\"orange\" as={Link} to={`/manage/${event.id}`}>\n            Manage Event\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n}\n\nexport default EventDetailHeader;\n","import React from \"react\";\nimport { Icon, Segment } from \"semantic-ui-react\";\nimport GoogleMapReact from \"google-map-react\";\nconst Marker = ({ text }) => <Icon color=\"red\" name=\"marker\" size=\"large\" />;\n\nconst EventDetailMap = (props) => {\n  return (\n    <Segment attached=\"bottom\">\n      <div style={{ height: \"300px\", width: \"100%\" }}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: process.env.REACT_APP_GG_API_KEY }}\n          defaultCenter={props.center}\n          defaultZoom={props.zoom}\n        >\n          <Marker\n            lat={props.center.lat}\n            lng={props.center.lng}\n            text=\"My Marker\"\n          />\n        </GoogleMapReact>\n      </div>\n    </Segment>\n  );\n};\n\nexport default EventDetailMap;\n","import React, { useState } from \"react\";\nimport { Segment, Grid, Icon, Button } from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport EventDetailMap from \"./event-detail-map\";\n\nfunction EventDetailInfo({ event }) {\n  const [showMap, setShowMap] = useState(false);\n\n  const toggleMap = () => {\n    setShowMap(!showMap);\n  };\n\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{event.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>\n              {moment(event.date.toDate()).format(\"DD/MM/yyyy HH:mm\")}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>{event.venue}</span>\n          </Grid.Column>\n\n          <Grid.Column width={4}>\n            <Button\n              color=\"teal\"\n              size=\"tiny\"\n              content={showMap ? \"Hide Map\" : \"Show Map\"}\n              onClick={toggleMap}\n            />\n          </Grid.Column>\n          {showMap && (\n            <EventDetailMap\n              zoom={8}\n              center={{\n                lat: event.venueLatLng.lat || 59.95,\n                lng: event.venueLatLng.lng || 30.33,\n              }}\n            />\n          )}\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n}\n\nexport default EventDetailInfo;\n","import React, { Fragment } from \"react\";\nimport { Segment, Label, Item } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\n\nfunction EventDetailSideBar({ attendees }) {\n  return (\n    <Fragment>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: \"none\" }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        {attendees && Object.keys(attendees).length}{\" \"}\n        {attendees && Object.keys(attendees).length === 1 ? \"Person\" : \"People\"}{\" \"}\n        going\n      </Segment>\n      <Segment attached>\n        <Item.Group divided>\n          {attendees &&\n            Object.keys(attendees).map((attendeeKey) => (\n              <Item\n                as={Link}\n                to={`/profile/${attendeeKey}`}\n                key={attendeeKey}\n                style={{ position: \"relative\" }}\n              >\n                {attendees[attendeeKey].host && (\n                  <Label\n                    style={{ position: \"absolute\" }}\n                    color=\"orange\"\n                    ribbon=\"right\"\n                  >\n                    Host\n                  </Label>\n                )}\n                <Item.Image\n                  size=\"tiny\"\n                  src={attendees[attendeeKey].photoURL}\n                  alt=\"\"\n                />\n                <Item.Content verticalAlign=\"middle\">\n                  <Item.Header as=\"h3\">\n                    {attendees[attendeeKey].displayName}\n                  </Item.Header>\n                </Item.Content>\n              </Item>\n            ))}\n        </Item.Group>\n      </Segment>\n    </Fragment>\n  );\n}\n\nexport default EventDetailSideBar;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { useSelector } from \"react-redux\";\n\nimport EventDetailChat from \"./event-detail-chat\";\nimport EventDetailHeader from \"./event-detail-header\";\nimport EventDetailInfo from \"./event-detail-info\";\nimport EventDetailSideBar from \"./event-detail-sidebar\";\nimport LoadingComponent from \"../../../app/layout/loading\";\nimport { useFirestore, useFirestoreConnect } from \"react-redux-firebase\";\nimport { toastr } from \"react-redux-toastr\";\n\nfunction EventDetail({ match, history }) {\n  const eventId = match.params.id;\n  useFirestoreConnect([\n    {\n      collection: \"events\",\n      doc: eventId,\n      storeAs: \"eventDetail\",\n    },\n  ]);\n  const event = useSelector((state) => state.firestore.data.eventDetail);\n  const auth = useSelector((state) => state.firebase.auth);\n  const firestore = useFirestore();\n\n  useEffect(() => {\n    async function findEvent() {\n      let event = await firestore.get(`events/${eventId}`);\n      if (!event.exists) {\n        history.push(\"/events\");\n        toastr.error(\"Error\", \"Event not found\");\n      }\n    }\n    findEvent();\n  }, []);\n  const attendees = event?.attendees || [];\n  const isHost = event?.hostUid === auth.uid;\n  const isGoing = Object.keys(attendees).some((a) => a === auth.uid);\n\n  return !event ? (\n    <LoadingComponent />\n  ) : (\n    <Grid>\n      <Grid.Column width={10}>\n        <EventDetailHeader\n          event={{ ...event, id: eventId }}\n          isHost={isHost}\n          isGoing={isGoing}\n        />\n        <EventDetailInfo event={{ ...event, id: eventId }} />\n        <EventDetailChat />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <EventDetailSideBar attendees={event.attendees} />\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default EventDetail;\n","import React from \"react\";\n\nfunction PeopleDashboard() {\n  return (\n    <div>\n      <h1>people dashboard</h1>\n    </div>\n  );\n}\n\nexport default PeopleDashboard;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport {\n  Button,\n  Card,\n  Grid,\n  Header,\n  Icon,\n  Image,\n  Item,\n  List,\n  Menu,\n  Segment,\n} from \"semantic-ui-react\";\nimport LazyLoad from \"react-lazyload\";\nimport LoadingComponent from \"../../../app/layout/loading\";\nimport { useFirestoreConnect } from \"react-redux-firebase\";\nimport { Link } from \"react-router-dom\";\n\nfunction UserDetailedPage({ match }) {\n  const uid = match.params.id;\n  const { auth } = useSelector((state) => state.firebase);\n\n  useFirestoreConnect(() => {\n    if (uid && uid !== auth.uid) {\n      return [\n        {\n          collection: \"users\",\n          doc: uid,\n          storeAs: \"profiles\",\n        },\n        {\n          collection: \"users\",\n          doc: uid,\n          subcollections: [{ collection: \"photos\" }],\n          storeAs: \"photos\",\n        },\n      ];\n    }\n    return [\n      {\n        collection: \"users\",\n        doc: auth.uid,\n        storeAs: \"profiles\",\n      },\n      {\n        collection: \"users\",\n        doc: auth.uid,\n        subcollections: [{ collection: \"photos\" }],\n        storeAs: \"photos\",\n      },\n    ];\n  });\n  const photos = useSelector((state) => state.firestore.ordered.photos);\n  const profile = useSelector(\n    (state) =>\n      state.firestore.ordered.profiles && state.firestore.ordered.profiles[0]\n  );\n  return !profile ? (\n    <LoadingComponent />\n  ) : (\n    <Grid>\n      <Grid.Column width={16}>\n        <Segment>\n          <Item.Group>\n            <Item>\n              <Item.Image\n                avatar\n                size=\"small\"\n                src={\n                  profile.photoURL ||\n                  process.env.PUBLIC_URL + \"/assets/user.png\"\n                }\n              />\n              <Item.Content verticalAlign=\"bottom\">\n                <Header as=\"h1\">{profile.displayName}</Header>\n                <br />\n                <Header as=\"h3\">{profile.occupation}</Header>\n                <br />\n                <Header as=\"h3\">\n                  {profile.dateOfBirth\n                    ? moment().diff(\n                        moment(profile.dateOfBirth.toDate()),\n                        \"years\"\n                      )\n                    : \"Unknown age\"}{\" \"}\n                  year old , Lives in {profile.origin}\n                </Header>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Grid.Column>\n      <Grid.Column width={uid === auth.uid ? 12 : 16}>\n        <Segment>\n          <Grid columns={2}>\n            <Grid.Column width={10}>\n              <Header icon=\"smile\" content=\"About Display Name\" />\n              <p>\n                I am a: <strong>{profile.occupation || \"Unknown\"}</strong>\n              </p>\n              <p>\n                Originally from <strong>{profile.origin || \"Unknown\"}</strong>\n              </p>\n              <p>\n                Member Since:{\" \"}\n                <strong>\n                  {new Date(profile.createdAt.toDate()).toDateString()}\n                </strong>\n              </p>\n              <p>{profile.description}</p>\n            </Grid.Column>\n            <Grid.Column width={6}>\n              <Header icon=\"heart outline\" content=\"Interests\" />\n              {profile.interest ? (\n                <List>\n                  {profile.interests &&\n                    profile.interests.map((interest, i) => (\n                      <Item key={interest + i}>\n                        <Icon name=\"heart\" />\n                        <Item.Content>{interest}</Item.Content>\n                      </Item>\n                    ))}\n                </List>\n              ) : (\n                <p>No interests</p>\n              )}\n            </Grid.Column>\n          </Grid>\n        </Segment>\n      </Grid.Column>\n\n      {uid === auth.uid && (\n        <Grid.Column width={4}>\n          <Segment>\n            <Button\n              as={Link}\n              to=\"/settings\"\n              color=\"teal\"\n              fluid\n              basic\n              content=\"Edit Profile\"\n            />\n          </Segment>\n        </Grid.Column>\n      )}\n      {photos && photos.length && (\n        <Grid.Column width={uid === auth.uid ? 12 : 16}>\n          <Segment attached>\n            <Header icon=\"image\" content=\"Photos\" />\n            <Image.Group size=\"small\">\n              {photos.map((photo) => (\n                <LazyLoad\n                  style={{ width: \"auto\" }}\n                  key={photo.id}\n                  height={400}\n                  placeholder={\n                    <Image\n                      rounded\n                      src={process.env.PUBLIC_URL + \"/assets/user.png\"}\n                      alt=\"\"\n                    />\n                  }\n                >\n                  <Image src={photo.url} alt=\"\" />\n                </LazyLoad>\n              ))}\n            </Image.Group>\n          </Segment>\n        </Grid.Column>\n      )}\n\n      <Grid.Column width={uid === auth.uid ? 12 : 16}>\n        <Segment attached>\n          <Header icon=\"calendar\" content=\"Events\" />\n          <Menu secondary pointing>\n            <Menu.Item name=\"All Events\" active />\n            <Menu.Item name=\"Past Events\" />\n            <Menu.Item name=\"Future Events\" />\n            <Menu.Item name=\"Events Hosted\" />\n          </Menu>\n\n          <Card.Group itemsPerRow={5}>\n            <Card>\n              <Image src={\"/assets/categoryImages/drinks.jpg\"} />\n              <Card.Content>\n                <Card.Header textAlign=\"center\">Event Title</Card.Header>\n                <Card.Meta textAlign=\"center\">\n                  28th March 2018 at 10:00 PM\n                </Card.Meta>\n              </Card.Content>\n            </Card>\n\n            <Card>\n              <Image src={\"/assets/categoryImages/drinks.jpg\"} />\n              <Card.Content>\n                <Card.Header textAlign=\"center\">Event Title</Card.Header>\n                <Card.Meta textAlign=\"center\">\n                  28th March 2018 at 10:00 PM\n                </Card.Meta>\n              </Card.Content>\n            </Card>\n          </Card.Group>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default UserDetailedPage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Grid, Menu, Header } from \"semantic-ui-react\";\n\nfunction SettingNav() {\n  return (\n    <Grid.Column width={4}>\n      <Menu vertical>\n        <Header icon=\"user\" attached inverted color=\"grey\" content=\"Profile\" />\n        <Menu.Item as={NavLink} to=\"/settings/basic\">\n          Basics\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/settings/about\">\n          About Me\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/settings/photo\">\n          My Photos\n        </Menu.Item>\n      </Menu>\n      <Grid.Row />\n      <Menu vertical>\n        <Header\n          icon=\"settings\"\n          attached\n          inverted\n          color=\"grey\"\n          content=\"Account\"\n        />\n        <Menu.Item as={NavLink} to=\"/settings/account\">\n          My Account\n        </Menu.Item>\n      </Menu>\n    </Grid.Column>\n  );\n}\n\nexport default SettingNav;\n","import React from \"react\";\nimport { isEmpty } from \"lodash\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { FormField, Label } from \"semantic-ui-react\";\n\nfunction DateInputPicker({\n  placeholder,\n  error,\n  width,\n  setValue,\n  triggerValidation,\n  name,\n  value,\n  ...rest\n}) {\n  return (\n    <FormField error={!isEmpty(error)}>\n      <DatePicker\n        name={name}\n        selected={value ? new Date(value) : null}\n        onChange={async (date) => {\n          setValue(name, date);\n          triggerValidation(name);\n        }}\n        placeholderText={placeholder}\n        dateFormat=\"dd/MM/yyyy HH:mm\"\n        timeFormat=\"HH:mm\"\n        showYearDropDown\n        dropdownMode=\"select\"\n        {...rest}\n      />\n      {!isEmpty(error) && (\n        <Label basic color=\"red\" pointing>\n          {error}\n        </Label>\n      )}\n    </FormField>\n  );\n}\n\nexport default DateInputPicker;\n","import React, { Component } from \"react\";\nimport places from \"places.js\";\nimport connect from \"./connector\";\n\nclass Places extends Component {\n  createRef = (c) => (this.element = c);\n\n  componentDidMount() {\n    const { refine, defaultRefinement, value } = this.props;\n\n    const autocomplete = places({\n      container: this.element,\n      useDeviceLocation: true,\n    });\n    autocomplete.setVal(value);\n\n    autocomplete.on(\"change\", (event) => {\n      this.props.handleChange && this.props.handleChange(event);\n      refine(event.suggestion.latlng);\n    });\n\n    autocomplete.on(\"clear\", () => {\n      refine(defaultRefinement);\n    });\n  }\n\n  render() {\n    return (\n      <div style={{ marginBottom: 20 }}>\n        <input\n          ref={this.createRef}\n          type=\"search\"\n          id=\"address-input\"\n          placeholder={this.props.placeholder}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(Places);\n","import { createConnector } from \"react-instantsearch-dom\";\n\nexport default createConnector({\n  displayName: \"AlgoliaPlaces\",\n\n  getProvidedProps() {\n    return {};\n  },\n\n  refine(props, searchState, nextValue) {\n    return {\n      ...searchState,\n      aroundLatLng: nextValue,\n      boundingBox: {},\n    };\n  },\n\n  getSearchParameters(searchParameters, props, searchState) {\n    const currentRefinement =\n      searchState.aroundLatLng || props.defaultRefinement;\n\n    return searchParameters\n      .setQueryParameter(\"insideBoundingBox\")\n      .setQueryParameter(\n        \"aroundLatLng\",\n        `${currentRefinement.lat}, ${currentRefinement.lng}`\n      );\n  },\n});\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport { isEmpty } from \"lodash\";\nimport algoliasearch from \"algoliasearch/lite\";\nimport { InstantSearch } from \"react-instantsearch-dom\";\nimport Places from \"./widget\";\nconst searchClient = algoliasearch(\n  \"latency\",\n  \"6be0576ff61c053d5f9a3225e2a90f76\"\n);\n\nfunction PlaceInput({ name, error, setValue, placeholder, value }) {\n  return (\n    <Form.Field error={!isEmpty(error)}>\n      <InstantSearch indexName=\"airports\" searchClient={searchClient}>\n        <Places\n          key={value}\n          value={value}\n          defaultRefinement={{\n            lat: 37.7793,\n            lng: -122.419,\n          }}\n          handleChange={(e) => {\n            const {\n              value,\n              latlng: { lat, lng },\n            } = e.suggestion;\n            setValue(name, value);\n            setValue(\"lat\", lat);\n            setValue(\"lng\", lng);\n          }}\n          placeholder={placeholder}\n        />\n      </InstantSearch>\n      {!isEmpty(error) && (\n        <Label basic color=\"red\" pointing>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n}\n\nexport default PlaceInput;\n","import { isEmpty } from \"lodash\";\nimport React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\n\nfunction RadioInput({ error, value, type, name, register, label }) {\n  return (\n    <Form.Field error={!isEmpty(error)}>\n      <div className=\"ui radio\">\n        <input value={value} type={type} name={name} ref={register} />{\" \"}\n        <label>{label}</label>\n      </div>\n      {!isEmpty(error) && (\n        <Label basic color=\"red\" pointing>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n}\n\nexport default RadioInput;\n","import React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport { isEmpty } from \"lodash\";\n\nconst TextInput = ({\n  error,\n  width,\n  register,\n  placeholder = \"\",\n  type = \"text\",\n  name,\n  fieldProps,\n  ...otherProps\n}) => {\n  return (\n    <Form.Field error={!isEmpty(error)} width={width} {...fieldProps}>\n      <input\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        ref={register}\n        {...otherProps}\n      />\n      {!isEmpty(error) && (\n        <Label basic color=\"red\" pointing>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default TextInput;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { isEmpty } from \"lodash\";\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useSelector } from \"react-redux\";\nimport {\n  Segment,\n  Form,\n  Header,\n  Divider,\n  Button,\n  Message,\n} from \"semantic-ui-react\";\nimport moment from \"moment\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { toastr } from \"react-redux-toastr\";\n\nimport DateInputPicker from \"../../../../app/common/form/date-picker\";\nimport PlaceInput from \"../../../../app/common/form/place-input\";\nimport RadioInput from \"../../../../app/common/form/radio-input\";\nimport TextInput from \"../../../../app/common/form/text-input\";\n\nconst Basics = (props) => {\n  const [mounted, setMounted] = useState(false);\n  const user = useSelector((state) => state.firebase.profile);\n  const {\n    register,\n    formState,\n    errors,\n    setValue,\n    trigger,\n    getValues,\n    handleSubmit,\n    watch,\n    setError,\n  } = useForm({\n    mode: \"all\",\n    defaultValues: { ...user, dateOfBirth: user?.dateOfBirth?.toDate() },\n  });\n\n  useEffect(() => {\n    register({ name: \"dateOfBirth\" });\n    register({ name: \"origin\" });\n    setMounted(true);\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(user) && mounted) {\n      setValue(\"displayName\", user.displayName);\n      setValue(\"city\", user?.origin || \"\");\n      setValue(\n        \"dateOfBirth\",\n        user?.dateOfBirth ? user.dateOfBirth.toDate() : \"\"\n      );\n      setValue(\"gender\", user.gender || \"\");\n    }\n  }, [user]);\n\n  const firebase = useFirebase();\n  const handleUpdateUserProfile = async (data) => {\n    const userInfo = { ...data };\n    if (userInfo.dateOfBirth) {\n      userInfo.dateOfBirth = new Date(userInfo.dateOfBirth);\n    }\n    try {\n      await firebase.updateProfile(userInfo);\n      toastr.success(\"Success\", \"Profile successfully updated\");\n    } catch (err) {\n      setError(\"general\", { message: err.message });\n    }\n  };\n\n  return (\n    <Segment>\n      <Header dividing size=\"large\" content=\"Basics\" />\n      <Form onSubmit={handleSubmit(handleUpdateUserProfile)}>\n        <TextInput\n          name=\"displayName\"\n          type=\"text\"\n          placeholder=\"Known As\"\n          register={register({\n            required: { message: \"Please enter your name\", value: true },\n          })}\n          error={errors?.displayName?.message}\n        />\n        <Form.Group inline>\n          <label>Gender:</label>\n          <RadioInput\n            type=\"radio\"\n            name=\"gender\"\n            value=\"male\"\n            label=\"Male\"\n            register={register}\n          />\n          <RadioInput\n            type=\"radio\"\n            value=\"female\"\n            name=\"gender\"\n            label=\"Female\"\n            register={register}\n          />\n        </Form.Group>\n        <DateInputPicker\n          width={8}\n          name=\"dateOfBirth\"\n          placeholder=\"Date of Birth\"\n          value={watch(\"dateOfBirth\")}\n          setValue={setValue}\n          triggerValidation={trigger}\n          showMonthDropdown={true}\n          showYearDropdown={true}\n          dateFormat=\"yyyy-MM-dd\"\n          maxDate={moment().subtract(18, \"years\").toDate()}\n        />\n        <PlaceInput\n          name=\"origin\"\n          placeholder=\"Home Town\"\n          setValue={setValue}\n          value={getValues(\"origin\") || \"\"}\n        />\n        {errors?.general?.message && (\n          <Message error list={[errors?.general?.message]} />\n        )}\n        <Divider />\n        <Button\n          size=\"large\"\n          positive\n          content=\"Update Profile\"\n          loading={formState.isSubmitting}\n        />\n      </Form>\n    </Segment>\n  );\n};\n\nexport default Basics;\n","import React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport { isEmpty } from \"lodash\";\n\nfunction SelectInput({\n  value,\n  name,\n  placeholder,\n  error,\n  triggerValidation,\n  setValue,\n  options,\n  multiple,\n  ...fieldProps\n}) {\n  return (\n    <Form.Field error={!isEmpty(error)} {...fieldProps}>\n      <Form.Select\n        multiple={multiple}\n        value={value}\n        name={name}\n        placeholder={placeholder}\n        onChange={async (e, { name, value }) => {\n          setValue(name, value);\n          await triggerValidation(name);\n        }}\n        options={options}\n      />\n      {!isEmpty(error) && (\n        <Label basic color=\"red\" pointing>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n}\n\nexport default SelectInput;\n","import React from \"react\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport { isEmpty } from \"lodash\";\n\nconst TextArea = ({\n  error,\n  width,\n  register,\n  placeholder = \"\",\n  name,\n  ...otherProps\n}) => {\n  return (\n    <Form.Field error={!isEmpty(error)} width={width}>\n      <textarea\n        name={name}\n        placeholder={placeholder}\n        ref={register}\n        {...otherProps}\n      />\n      {!isEmpty(error) && (\n        <Label basic color=\"red\" pointing>\n          {error}\n        </Label>\n      )}\n    </Form.Field>\n  );\n};\n\nexport default TextArea;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Button,\n  Divider,\n  Form,\n  Header,\n  Segment,\n  Message,\n} from \"semantic-ui-react\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { toastr } from \"react-redux-toastr\";\n\nimport PlaceInput from \"../../../../app/common/form/place-input\";\nimport RadioInput from \"../../../../app/common/form/radio-input\";\nimport SelectInput from \"../../../../app/common/form/select-input\";\nimport TextInput from \"../../../../app/common/form/text-input\";\nimport TextArea from \"../../../../app/common/form/text-area\";\nimport { useSelector } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\n\nconst interests = [\n  { key: \"drinks\", text: \"Drinks\", value: \"drinks\" },\n  { key: \"culture\", text: \"Culture\", value: \"culture\" },\n  { key: \"film\", text: \"Film\", value: \"film\" },\n  { key: \"food\", text: \"Food\", value: \"food\" },\n  { key: \"music\", text: \"Music\", value: \"music\" },\n  { key: \"travel\", text: \"Travel\", value: \"travel\" },\n];\n\nconst About = () => {\n  const user = useSelector((state) => state.firebase.profile);\n  const {\n    register,\n    setValue,\n    setError,\n    handleSubmit,\n    watch,\n    formState,\n    trigger,\n    errors,\n  } = useForm({\n    defaultValues: {\n      interests: [],\n      origin: \"\",\n      ...user,\n    },\n  });\n\n  useEffect(() => {\n    register({ name: \"interests\" });\n    register({ name: \"origin\" });\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(user)) {\n      setValue(\"status\", user?.status);\n      setValue(\"about\", user?.about);\n      setValue(\"interests\", user?.interests || []);\n      setValue(\"occupation\", user?.occupation);\n      setValue(\"origin\", user?.origin);\n    }\n  }, [user]);\n\n  const firebase = useFirebase();\n\n  const handleUpdateAboutInfo = async (data) => {\n    const userInfo = { ...data };\n    try {\n      await firebase.updateProfile(userInfo);\n      toastr.success(\"Success\", \"Profile successfully updated\");\n    } catch (err) {\n      setError(\"general\", { message: err.message });\n    }\n  };\n\n  return (\n    <Segment>\n      <Header dividing size=\"large\" content=\"About Me\" />\n      <p>Complete your profile to get the most out of this site</p>\n      <Form onSubmit={handleSubmit(handleUpdateAboutInfo)}>\n        <Form.Group inline>\n          <label>Tell us your status: </label>\n          <RadioInput\n            name=\"status\"\n            type=\"radio\"\n            value=\"single\"\n            label=\"Single\"\n            register={register}\n          />\n          <RadioInput\n            name=\"status\"\n            type=\"radio\"\n            value=\"relationship\"\n            label=\"Relationship\"\n            register={register}\n          />\n          <RadioInput\n            name=\"status\"\n            type=\"radio\"\n            value=\"married\"\n            label=\"Married\"\n            register={register}\n          />\n        </Form.Group>\n        <Divider />\n        <label>Tell us about yourself</label>\n        <TextArea\n          style={{ marginTop: \"1rem\" }}\n          rows={5}\n          name=\"about\"\n          placeholder=\"About Me\"\n          register={register}\n        />\n        <SelectInput\n          style={{ marginTop: \"1rem\" }}\n          name=\"interests\"\n          options={interests}\n          multiple={true}\n          placeholder=\"Select your interests\"\n          setValue={setValue}\n          triggerValidation={trigger}\n          value={watch(\"interests\")}\n        />\n        <TextInput\n          name=\"occupation\"\n          type=\"text\"\n          placeholder=\"Occupation\"\n          register={register}\n        />\n        <PlaceInput\n          value={watch(\"origin\")}\n          name=\"origin\"\n          placeholder=\"Country of Origin\"\n          setValue={setValue}\n        />\n        <Divider />\n\n        {errors?.general?.message && (\n          <Message error list={[errors?.general?.message]} />\n        )}\n\n        <Button\n          size=\"large\"\n          positive\n          content=\"Update Profile\"\n          type=\"submit\"\n          loading={formState.isSubmitting}\n        />\n      </Form>\n    </Segment>\n  );\n};\n\nexport default About;\n","import React, { useRef, useState } from \"react\";\nimport {\n  Image,\n  Segment,\n  Header,\n  Divider,\n  Grid,\n  Button,\n  Card,\n  Icon,\n} from \"semantic-ui-react\";\nimport { useDropzone } from \"react-dropzone\";\nimport Cropper from \"react-cropper\";\nimport {\n  useFirebase,\n  useFirestore,\n  useFirestoreConnect,\n} from \"react-redux-firebase\";\nimport { toastr } from \"react-redux-toastr\";\nimport { useSelector } from \"react-redux\";\n\nfunction PhotosPage() {\n  const [files, setFiles] = useState([]);\n  const [isUploading, setIsUploading] = useState(false);\n  const myCropper = useRef(null);\n  const { auth, profile } = useSelector((state) => state.firebase);\n  const firebase = useFirebase();\n  const firestore = useFirestore();\n  useFirestoreConnect([\n    {\n      collection: \"users\",\n      doc: auth.uid,\n      subcollections: [{ collection: \"photos\" }],\n      storeAs: \"photos\",\n    },\n  ]);\n  const photos = useSelector((state) => state.firestore.ordered.photos);\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop: (acceptFiles) => {\n      setFiles(acceptFiles);\n    },\n    multiple: false,\n    accept: \"image/*\",\n  });\n\n  const handleUploadProfileImage = async () => {\n    setIsUploading(true);\n    const user = firebase.auth().currentUser;\n    const path = `${user.uid}/user_images`;\n    const options = {\n      name: files[0].name,\n    };\n    myCropper.current.getCroppedCanvas().toBlob(async (blob) => {\n      try {\n        //upload file to firebase storage\n        const uploadedFile = await firebase.uploadFile(\n          path,\n          blob,\n          null,\n          options\n        );\n\n        //get downloable URL\n        const downloadURL = await uploadedFile.uploadTaskSnapshot.ref.getDownloadURL();\n\n        //if user dont have photoURL set them photoURL, else add new image to photos sub-collection\n        const userDoc = await firestore.get(`users/${user.uid}`);\n        if (!userDoc.data().photoURL) {\n          await firebase.updateProfile({ photoURL: downloadURL });\n          await user.updateProfile({ photoURL: downloadURL });\n        }\n\n        await firestore.add(\n          {\n            collection: \"users\",\n            doc: user.uid,\n            subcollections: [{ collection: \"photos\" }],\n          },\n          {\n            name: files[0].name,\n            url: downloadURL,\n          }\n        );\n        setIsUploading(false);\n        setFiles([]);\n        toastr.success(\"Success\", \"Photo has been uploaded\");\n      } catch (err) {\n        console.log(err);\n        setIsUploading(false);\n      }\n    });\n  };\n\n  const handleDeleteImage = async (photo) => {\n    const user = firebase.auth().currentUser;\n    try {\n      await firebase.deleteFile(`${user.uid}/user_images/${photo.name}`);\n      await firestore.delete({\n        collection: \"users\",\n        doc: user.uid,\n        subcollections: [\n          {\n            collection: \"photos\",\n            doc: photo.id,\n          },\n        ],\n      });\n      toastr.success(\"Success\", \"Photo deleted\");\n    } catch (err) {\n      toastr.error(\"Failed\", \"Something failed\");\n      console.log(err);\n    }\n  };\n\n  const handleSetMainImage = async (photo) => {\n    try {\n      await firebase.updateProfile({\n        photoURL: photo.url,\n      });\n      toastr.success(\"Success\", \"Main photo updated\");\n    } catch (err) {\n      toastr.error(\"Failed\", \"Something failed\");\n\n      console.log(err);\n    }\n  };\n\n  return (\n    <Segment>\n      <Header dividing size=\"large\" content=\"Your Photos\" />\n      <Grid>\n        <Grid.Row>\n          <Grid.Column width={4}>\n            <Header color=\"teal\" sub content=\"Step 1 - Add Photo\" />\n            <div {...getRootProps()} className=\"dropzone-wrapper\">\n              <input {...getInputProps()} />\n              <Icon name=\"upload\" size=\"big\" />\n              <span>Drop image here or click to add</span>\n            </div>\n          </Grid.Column>\n          <Grid.Column width={1} />\n          <Grid.Column width={4}>\n            <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\n            {files[0] && (\n              <Cropper\n                src={files[0] && URL.createObjectURL(files[0])}\n                style={{ height: 200, width: \"100%\" }}\n                initialAspectRatio={1}\n                preview=\".img-preview\"\n                viewMode={1}\n                guides={true}\n                minCropBoxHeight={10}\n                minCropBoxWidth={10}\n                background={false}\n                responsive={true}\n                autoCropArea={1}\n                checkOrientation={false}\n                onInitialized={(cropper) => (myCropper.current = cropper)}\n              />\n            )}\n          </Grid.Column>\n          <Grid.Column width={1} />\n          <Grid.Column width={4}>\n            <Header sub color=\"teal\" content=\"Step 3 - Preview and Upload\" />\n            {files[0] && (\n              <div\n                style={{\n                  width: \"200px\",\n                  height: \"200px \",\n                }}\n              >\n                <div\n                  className=\"img-preview\"\n                  style={{\n                    width: \"200px\",\n                    height: \"200px \",\n                    overflow: \"hidden\",\n                  }}\n                />\n              </div>\n            )}\n\n            {files[0] && (\n              <Button.Group style={{ width: \"100%\" }}>\n                <Button\n                  style={{ width: \"50%\" }}\n                  onClick={handleUploadProfileImage}\n                  positive\n                  icon=\"check\"\n                  disabled={isUploading}\n                  loading={isUploading}\n                ></Button>\n                <Button\n                  style={{ width: \"50%\" }}\n                  icon=\"close\"\n                  disabled={isUploading}\n                  onClick={() => {\n                    setFiles([]);\n                  }}\n                ></Button>\n              </Button.Group>\n            )}\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <Divider />\n      <Header sub color=\"teal\" content=\"All Photos\" />\n\n      <Card.Group itemsPerRow={4}>\n        <Card style={{ display: \"flex\", flexDirection: \"column\" }}>\n          <Image\n            src={profile.photoURL}\n            alt=\"\"\n            style={{ minHeight: 150, flex: 1 }}\n          />\n          <Button positive>Main Photo</Button>\n        </Card>\n        {photos &&\n          photos.map((photo) => {\n            return (\n              <Card\n                key={photo.id}\n                style={{ display: \"flex\", flexDirection: \"column\" }}\n              >\n                <Image\n                  src={photo.url}\n                  alt=\"No image\"\n                  style={{ minHeight: 150, flex: 1 }}\n                />\n                <div className=\"ui two buttons\">\n                  <Button\n                    basic\n                    color=\"green\"\n                    onClick={() => {\n                      handleSetMainImage(photo);\n                    }}\n                  >\n                    Main\n                  </Button>\n                  <Button\n                    basic\n                    icon=\"trash\"\n                    color=\"red\"\n                    onClick={() => {\n                      handleDeleteImage(photo);\n                    }}\n                  />\n                </div>\n              </Card>\n            );\n          })}\n      </Card.Group>\n    </Segment>\n  );\n}\n\nexport default PhotosPage;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport {\n  Segment,\n  Header,\n  Form,\n  Divider,\n  Button,\n  Icon,\n  Message,\n} from \"semantic-ui-react\";\nimport { yupResolver } from \"@hookform/resolvers\";\nimport { toastr } from \"react-redux-toastr\";\nimport * as yup from \"yup\";\n\nimport TextInput from \"../../../../app/common/form/text-input\";\nimport { useFirebase } from \"react-redux-firebase\";\nimport { useSelector } from \"react-redux\";\n\nconst schema = yup.object().shape({\n  password: yup.string().min(6).required(\"Please enter password\"),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\"),\n});\n\nconst Account = () => {\n  const {\n    register,\n    errors,\n    handleSubmit,\n    formState,\n    reset,\n    setError,\n  } = useForm({\n    resolver: yupResolver(schema),\n    mode: \"all\",\n    reValidateMode: \"onChange\",\n  });\n  const provider = useSelector(\n    (state) => state.firebase.auth.providerData[0].providerId\n  );\n  const firebase = useFirebase();\n\n  const updatePassword = async (data) => {\n    try {\n      await firebase.auth().currentUser.updatePassword(data.password);\n      reset();\n      toastr.success(\"Success\", \"Your password has beed updated!\");\n    } catch (err) {\n      setError(\"general\", { message: err.message });\n    }\n  };\n\n  return (\n    <Segment>\n      <Header dividing size=\"large\" content=\"Account\" />\n      {provider === \"password\" && (\n        <div>\n          <Header color=\"teal\" sub content=\"Change password\" />\n          <p>Use this form to update your account settings</p>\n          <Form onSubmit={handleSubmit(updatePassword)}>\n            <TextInput\n              name=\"password\"\n              type=\"password\"\n              pointing=\"left\"\n              placeholder=\"New Password\"\n              register={register({\n                required: { message: \"Required\", value: true },\n              })}\n              error={errors?.password?.message}\n              autoComplete=\"new-password\"\n            />\n            <TextInput\n              name=\"confirmPassword\"\n              type=\"password\"\n              pointing=\"left\"\n              placeholder=\"Confirm Password\"\n              register={register({\n                required: { message: \"Required\", value: true },\n              })}\n              error={errors?.confirmPassword?.message}\n              autoComplete=\"new-password\"\n            />\n            {errors?.general?.message ?? (\n              <Message\n                style={{ color: \"red\" }}\n                error\n                header=\"Update password failed\"\n                list={[errors?.general?.message]}\n              />\n            )}\n            <Divider />\n            <Button\n              disabled={!formState.isValid || formState.isSubmitting}\n              size=\"large\"\n              positive\n              content=\"Update Password\"\n              type=\"submit\"\n              loading={formState.isSubmitting}\n            />\n          </Form>\n        </div>\n      )}\n\n      <Segment>\n        {provider === \"facebook.com\" && (\n          <>\n            <Header color=\"teal\" sub content=\"Facebook Account\" />\n            <p>Please visit Facebook to update your account settings</p>\n            <Button type=\"button\" color=\"facebook\">\n              <Icon name=\"facebook\" />\n              Go to Facebook\n            </Button>\n          </>\n        )}\n        {provider === \"google.com\" && (\n          <>\n            <Header color=\"teal\" sub content=\"Google Account\" />\n            <p>Please visit Google to update your account settings</p>\n            <Button type=\"button\" color=\"google plus\">\n              <Icon name=\"google plus\" />\n              Go to Google\n            </Button>\n          </>\n        )}\n      </Segment>\n    </Segment>\n  );\n};\n\nexport default Account;\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport SettingNav from \"../setting-nav\";\nimport Basic from \"../basic\";\nimport About from \"../about\";\nimport Photo from \"../photo\";\nimport Account from \"../account\";\n\nfunction SettingDashboard() {\n  return (\n    <Grid>\n      <Grid.Column width={12}>\n        <Switch>\n          <Redirect exact from=\"/settings\" to=\"/settings/basic\" />\n          <Route path=\"/settings/basic\" component={Basic} />\n          <Route path=\"/settings/about\" component={About} />\n          <Route path=\"/settings/photo\" component={Photo} />\n          <Route path=\"/settings/account\" component={Account} />\n        </Switch>\n      </Grid.Column>\n      <Grid.Column width={4}>\n        <SettingNav />\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default SettingDashboard;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form, Segment, Grid, Header } from \"semantic-ui-react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch } from \"react-redux\";\nimport { isEmpty } from \"lodash\";\nimport { cancelToggle, createEvent, updateEvent } from \"../event.action\";\nimport TextInput from \"../../../app/common/form/text-input\";\nimport TextArea from \"../../../app/common/form/text-area\";\nimport SelectInput from \"../../../app/common/form/select-input\";\nimport DateInputPicker from \"../../../app/common/form/date-picker\";\nimport PlaceInput from \"../../../app/common/form/place-input\";\nimport LoadingComponent from \"../../../app/layout/loading\";\nimport { useFirestore } from \"react-redux-firebase\";\n\nconst category = [\n  { key: \"drinks\", text: \"Drinks\", value: \"drinks\" },\n  { key: \"culture\", text: \"Culture\", value: \"culture\" },\n  { key: \"film\", text: \"Film\", value: \"film\" },\n  { key: \"food\", text: \"Food\", value: \"food\" },\n  { key: \"music\", text: \"Music\", value: \"music\" },\n  { key: \"travel\", text: \"Travel\", value: \"travel\" },\n];\n\nfunction EventForm({ match, history }) {\n  const eventId = match.params.id;\n  const [mounted, setMounted] = useState(false);\n  const [event, setEvent] = useState({});\n  const dispatch = useDispatch();\n  const firestore = useFirestore();\n  const { register, handleSubmit, errors, setValue, trigger, watch } = useForm({\n    defaultValues: { ...event },\n  });\n\n  useEffect(() => {\n    register(\n      { name: \"category\" },\n      { required: { message: \"Please choose a category\", value: true } }\n    );\n    register(\n      { name: \"date\" },\n      { required: { message: \"Please choose a valid date\", value: true } }\n    );\n    register(\n      { name: \"venue\" },\n      { required: { message: \"Please chose a valid venue\", value: \"true\" } }\n    );\n    register({ name: \"lat\" }, { required: true });\n    register({ name: \"lng\" }, { required: true });\n    async function findEvent() {\n      let event = await firestore.get(`events/${eventId}`);\n      if (event.exists) {\n        setEvent(event.data());\n      }\n    }\n    findEvent();\n    setMounted(true);\n  }, []);\n\n  useEffect(() => {\n    if (!isEmpty(event) && mounted) {\n      setValue(\"lat\", event.venueLatLng.lat);\n      setValue(\"lng\", event.venueLatLng.lng);\n      setValue(\"title\", event.title);\n      setValue(\"category\", event.category);\n      setValue(\"description\", event.description);\n      setValue(\"venue\", event.venue);\n      setValue(\"date\", event.date.toDate());\n      setValue(\"id\", eventId);\n    }\n  }, [event]);\n\n  const onSubmitForm = (data) => {\n    if (!isEmpty(data.id)) {\n      dispatch(updateEvent(data));\n      history.goBack();\n    } else {\n      dispatch(createEvent(data));\n      history.push(\"/events\");\n    }\n  };\n\n  return isEmpty(event) && !mounted ? (\n    <LoadingComponent />\n  ) : (\n    <Grid>\n      <Grid.Column width={10}>\n        <Segment>\n          <Form onSubmit={handleSubmit(onSubmitForm)}>\n            <Header sub color=\"teal\">\n              Event Details\n            </Header>\n            <Form.Field>\n              <input ref={register} name=\"id\" hidden />\n            </Form.Field>\n            <TextInput\n              name=\"title\"\n              type=\"text\"\n              placeholder=\"Give your event a title\"\n              register={register({\n                required: { message: \"Please enter event title\", value: true },\n              })}\n              error={errors?.title?.message || \"\"}\n            />\n            <SelectInput\n              options={category}\n              value={watch(\"category\")}\n              name=\"category\"\n              placeholder=\"What's your event about?\"\n              error={errors?.category?.message || \"\"}\n              setValue={setValue}\n              triggerValidation={trigger}\n            />\n\n            <TextArea\n              rows={6}\n              name=\"description\"\n              type=\"description\"\n              placeholder=\"Tell us about your event\"\n              register={register({\n                required: { message: \"required\", value: true },\n              })}\n              error={errors?.title?.message || \"\"}\n            />\n\n            <Header sub color=\"teal\" style={{ marginBottom: \"1rem\" }}>\n              Event Location Details\n            </Header>\n\n            <PlaceInput\n              name=\"venue\"\n              placeholder=\"Venue event is taking place\"\n              setValue={setValue}\n              error={errors?.venue?.message}\n              value={watch(\"venue\") || \"\"}\n            />\n\n            <DateInputPicker\n              value={watch(\"date\")}\n              name=\"date\"\n              placeholder=\"Date and Time of event\"\n              error={errors?.date?.message || \"\"}\n              setValue={setValue}\n              triggerValidation={trigger}\n              showTimeSelect={true}\n            />\n            <Button positive type=\"submit\">\n              Submit\n            </Button>\n            <Button\n              style={{ marginLeft: \"1rem\" }}\n              onClick={() => {\n                history.goBack();\n              }}\n              type=\"button\"\n            >\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {\n                dispatch(cancelToggle(!event.cancelled, eventId));\n                setEvent((state) => ({\n                  ...state,\n                  cancelled: !state.cancelled,\n                }));\n              }}\n              floated=\"right\"\n              type=\"button\"\n              color={event.cancelled ? \"green\" : \"red\"}\n            >\n              {event.cancelled ? \"Reactivate event\" : \"Cancel event\"}\n            </Button>\n          </Form>\n        </Segment>\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default EventForm;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Segment,\n  Container,\n  Header,\n  Image,\n  Button,\n  Icon,\n} from \"semantic-ui-react\";\n\nfunction Home() {\n  return (\n    <Segment inverted textAlign=\"center\" vertical className=\"homepage\">\n      <Container text>\n        <Header as=\"h1\" inverted>\n          <Image\n            size=\"massive\"\n            src={process.env.PUBLIC_URL + \"/assets/logo.png\"}\n            alt=\"logo\"\n            style={{ marginBottom: 12 }}\n          />\n          Re-vents\n        </Header>\n        <Button size=\"huge\" inverted as={Link} to=\"/events\">\n          Get started\n          <Icon name=\"right arrow\" inverted />\n        </Button>\n      </Container>\n    </Segment>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button, Icon } from \"semantic-ui-react\";\nimport { socialLogin } from \"../auth.action\";\n\nfunction SocialLogin() {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <Button\n        type=\"button\"\n        style={{ marginBottom: \"10px\" }}\n        fluid\n        color=\"facebook\"\n        onClick={() => {\n          dispatch(socialLogin(\"facebook\"));\n        }}\n      >\n        <Icon name=\"facebook\" /> Login with Facebook\n      </Button>\n      <Button\n        type=\"button\"\n        fluid\n        style={{ marginBottom: \"10px\" }}\n        color=\"google plus\"\n        onClick={() => {\n          dispatch(socialLogin(\"google\"));\n        }}\n      >\n        <Icon name=\"google plus\" />\n        Login with Google\n      </Button>\n      <Button\n        type=\"button\"\n        fluid\n        style={{ marginBottom: \"10px\" }}\n        onClick={() => {\n          dispatch(socialLogin(\"github\"));\n        }}\n      >\n        <Icon name=\"github\" />\n        Login with Github\n      </Button>\n      {/* <Button\n        type=\"button\"\n        fluid\n        color=\"twitter\"\n        onClick={() => {\n          dispatch(socialLogin(\"twitter\"));\n        }}\n      >\n        <Icon name=\"twitter\" />\n        Login with Twitter\n      </Button> */}\n    </div>\n  );\n}\n\nexport default SocialLogin;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Segment, Button, Message, Divider } from \"semantic-ui-react\";\nimport TextInput from \"../../../app/common/form/text-input\";\nimport { login } from \"../auth.action\";\nimport SocialLogin from \"../social-login\";\n\nconst LoginForm = () => {\n  const { register, handleSubmit, formState } = useForm({\n    mode: \"all\",\n    reValidateMode: \"onChange\",\n  });\n  const { logInError } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const handleLogIn = (data) => {\n    dispatch(login(data));\n  };\n\n  return (\n    <Form error size=\"large\" onSubmit={handleSubmit(handleLogIn)}>\n      <Segment>\n        <TextInput\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email Address\"\n          register={register({\n            required: { message: \"Required\", value: true },\n          })}\n        />\n        <TextInput\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          autoComplete=\"current-password\"\n          register={register({\n            required: { message: \"Required\", value: true },\n          })}\n        />\n        {logInError && (\n          <Message error header=\"Log in failed\" list={[logInError?.message]} />\n        )}\n        <Button\n          fluid\n          size=\"large\"\n          color=\"teal\"\n          disabled={!formState.isValid || formState.isSubmitting}\n          loading={formState.isSubmitting}\n        >\n          Login\n        </Button>\n        <Divider content=\"Or\" horizontal />\n        <SocialLogin />\n      </Segment>\n    </Form>\n  );\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Form, Segment, Button, Message, Divider } from \"semantic-ui-react\";\nimport TextInput from \"../../../app/common/form/text-input\";\nimport { registerUser } from \"../auth.action\";\nimport SocialLogin from \"../social-login\";\n\nconst RegisterForm = () => {\n  const { register, handleSubmit, formState } = useForm({\n    mode: \"all\",\n    reValidateMode: \"onChange\",\n  });\n  const { registerUserError } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  const handleRegister = (data) => {\n    dispatch(registerUser(data));\n  };\n  return (\n    <Form error size=\"large\" onSubmit={handleSubmit(handleRegister)}>\n      <Segment>\n        <TextInput\n          name=\"displayName\"\n          type=\"text\"\n          placeholder=\"Know As\"\n          register={register({\n            required: { message: \"Required\", value: true },\n          })}\n        />\n        <TextInput\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          register={register({\n            required: { message: \"Required\", value: true },\n          })}\n        />\n        <TextInput\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          register={register({\n            required: { message: \"Required\", value: true },\n            minLength: { message: \"At lease 6 characters\", value: 6 },\n          })}\n        />\n        {registerUserError && (\n          <Message\n            error\n            header=\"Register failed\"\n            list={[registerUserError.message]}\n          />\n        )}\n        <Button\n          fluid\n          size=\"large\"\n          color=\"teal\"\n          disabled={!formState.isValid || formState.isSubmitting}\n          loading={formState.isSubmitting}\n        >\n          Register\n        </Button>\n        <Divider content=\"Or\" horizontal />\n        <SocialLogin />\n      </Segment>\n    </Form>\n  );\n};\n\nexport default RegisterForm;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport LogInModal from \"./login-modal\";\nimport RegisterModal from \"./register-modal\";\n\nconst modalLookUp = {\n  LogInModal,\n  RegisterModal,\n};\n\nfunction ModalManager() {\n  const modals = useSelector((state) => state.modals);\n\n  let renderedModal = null;\n  if (modals) {\n    const { modalType, modalProps } = modals;\n    const ModalComponent = modalLookUp[modalType];\n    renderedModal = <ModalComponent {...modalProps} />;\n  }\n  return renderedModal;\n}\n\nexport default ModalManager;\n","import React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\n\nimport LoginForm from \"../auth/log-in/login-form\";\nimport { useDispatch } from \"react-redux\";\nimport { closeModal } from \"./modal.action\";\n\nconst LoginModal = () => {\n  const dispatch = useDispatch();\n  return (\n    <Modal\n      size=\"mini\"\n      open={true}\n      onClose={() => {\n        dispatch(closeModal());\n      }}\n    >\n      <Modal.Header>Login to Re-vents</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <LoginForm />\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default LoginModal;\n","import React from \"react\";\nimport { Modal } from \"semantic-ui-react\";\n\nimport RegisterForm from \"../auth/register/register-form\";\nimport { useDispatch } from \"react-redux\";\nimport { closeModal } from \"./modal.action\";\n\nconst RegisterModal = () => {\n  const dispatch = useDispatch();\n  return (\n    <Modal\n      size=\"mini\"\n      open={true}\n      onClose={() => {\n        dispatch(closeModal());\n      }}\n    >\n      <Modal.Header>Sign Up to Re-vents</Modal.Header>\n      <Modal.Content>\n        <Modal.Description>\n          <RegisterForm />\n        </Modal.Description>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default RegisterModal;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { isLoaded } from \"react-redux-firebase\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector((state) => state.firebase.auth);\n  if (!isLoaded(auth))\n    return (\n      <Dimmer active inverted>\n        <Loader inverted content=\"Loading...\" />\n      </Dimmer>\n    );\n  return children;\n}\n\nexport default AuthIsLoaded;\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport EventDashboard from \"../../features/event/event-dashboard\";\nimport NavBar from \"../../features/nav/nav-bar\";\nimport EventDetail from \"../../features/event/event-detail\";\nimport PeopleDashboard from \"../../features/user/people-dashboard\";\nimport UserDetail from \"../../features/user/user-detail\";\nimport SettingDashboard from \"../../features/user/settings/setting-dashboard\";\nimport EventForm from \"../../features/event/event-form\";\nimport Home from \"../../features/home\";\nimport ModalManager from \"../../features/modal/modal-manager\";\nimport AuthIsLoaded from \"../utils/auth-loaded\";\n\nfunction App() {\n  return (\n    <AuthIsLoaded>\n      <div>\n        <ModalManager />\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n        </Switch>\n        <Route\n          path=\"/(.+)\"\n          render={() => (\n            <div>\n              <NavBar />\n              <Container style={{ marginTop: \"5rem\" }}>\n                <Switch>\n                  <Route path=\"/events\" exact component={EventDashboard} />\n                  <Route path=\"/events/:id\" component={EventDetail} />\n                  <Route path=\"/manage/:id\" component={EventForm} />\n                  <Route path=\"/people\" component={PeopleDashboard} />\n                  <Route path=\"/profile/:id\" component={UserDetail} />\n                  <Route path=\"/settings\" component={SettingDashboard} />\n                  <Route path=\"/create-event\" component={EventForm} />\n                </Switch>\n              </Container>\n            </div>\n          )}\n        />\n      </div>\n    </AuthIsLoaded>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { handleActions } from \"redux-actions\";\nimport { closeModal, openModal } from \"./modal.action\";\n\nconst initialState = null;\n\nexport const modalReducer = handleActions(\n  {\n    [openModal]: (state, { payload }) => {\n      return payload;\n    },\n    [closeModal]: () => {\n      return null;\n    },\n  },\n  initialState\n);\n","import { handleActions } from \"redux-actions\";\nimport { logInFailed, registerUserFailed, resetAuthState } from \"./auth.action\";\n\nconst initialState = {\n  logInError: null,\n  registerUserError: null,\n};\n\nexport const authReducer = handleActions(\n  {\n    [logInFailed]: (state, { payload }) => {\n      return { ...state, logInError: payload };\n    },\n    [registerUserFailed]: (state, { payload }) => {\n      return { ...state, registerUserError: payload };\n    },\n    [resetAuthState]: (state) => initialState,\n  },\n  initialState\n);\n","import { handleActions } from \"redux-actions\";\nimport {\n  asyncActionError,\n  asyncActionFinish,\n  asyncActionStart,\n} from \"./async.action\";\n\nconst initialState = {\n  loading: false,\n};\n\nexport const asyncReducer = handleActions(\n  {\n    [asyncActionStart]: (state) => {\n      return { ...state, loading: true };\n    },\n    [asyncActionFinish]: (state) => {\n      return { ...state, loading: false };\n    },\n    [asyncActionError]: (state) => {\n      return { ...state, loading: false };\n    },\n  },\n  initialState\n);\n","import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEARUREMENT_ID,\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore();\n\nexport default firebase;\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\n\nimport { modalReducer } from \"../../features/modal/modal.reducer\";\nimport { authReducer } from \"../../features/auth/auth.reducer\";\nimport { asyncReducer } from \"../../features/async/async.reducer\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nimport { getFirebase, firebaseReducer } from \"react-redux-firebase\";\nimport {\n  reduxFirestore,\n  getFirestore,\n  firestoreReducer,\n} from \"redux-firestore\";\nimport firebase from \"../config/firebase\";\n\nconst rootReducer = combineReducers({\n  modals: modalReducer,\n  auth: authReducer,\n  async: asyncReducer,\n  toastr: toastrReducer,\n  firebase: firebaseReducer,\n  firestore: firestoreReducer,\n});\n\nconst middlewares = [thunk.withExtraArgument({ getFirebase, getFirestore })];\nconst middlewareEnhancer = applyMiddleware(...middlewares);\nconst storeEnhancer = [middlewareEnhancer];\nconst composedEnhander = composeWithDevTools(\n  ...storeEnhancer,\n  reduxFirestore(firebase)\n);\n\nconst store = createStore(rootReducer, composedEnhander);\n\nexport { store };\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop({ children }) {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return children;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./app/layout/app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./app/store/store\";\nimport { ReactReduxFirebaseProvider } from \"react-redux-firebase\";\nimport { createFirestoreInstance } from \"redux-firestore\";\nimport firebase from \"./app/config/firebase\";\n\nimport ReduxToastr from \"react-redux-toastr\";\nimport ScrollToTop from \"./app/utils/scroll-to-top\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-redux-toastr/lib/css/react-redux-toastr.min.css\";\nimport \"cropperjs/dist/cropper.css\";\n\nconst rrfConfig = {\n  userProfile: \"users\",\n  attachAuthIsReady: true,\n  firebaseStateName: \"firebase\",\n  useFirestoreForProfile: true,\n  profileFactory: (userData, profileData, firebase) => {\n    const { displayName } = userData;\n    const { email, avatarUrl } = profileData;\n\n    return {\n      displayName,\n      email,\n      photoURL: avatarUrl,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    };\n  },\n};\n\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <HashRouter>\n        <ScrollToTop>\n          <ReduxToastr\n            timeOut={4000}\n            position=\"top-right\"\n            transitionIn=\"fadeIn\"\n            transitionOut=\"fadeOut\"\n          />\n          <App />\n        </ScrollToTop>\n      </HashRouter>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}