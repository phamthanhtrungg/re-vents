{"version":3,"sources":["features/event/event-dashboard/index.jsx","features/nav/nav-bar/index.jsx","app/layout/app.jsx","reportWebVitals.js","index.js"],"names":["EventDashboard","Grid","Column","width","NavBar","Menu","inverted","fixed","Container","Item","header","src","process","alt","style","marginRight","name","Button","floated","positive","content","position","basic","marginLeft","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+MAgBeA,MAbf,WACE,OACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,OAAN,CAAaC,MAAO,IAClB,yCAEF,kBAACF,EAAA,EAAKC,OAAN,CAAaC,MAAO,GAClB,4C,kBCuBOC,MA9Bf,WACE,OACE,kBAACC,EAAA,EAAD,CAAMC,UAAQ,EAACC,MAAM,OACnB,kBAACC,EAAA,EAAD,KACE,kBAACH,EAAA,EAAKI,KAAN,CAAWC,QAAM,GACf,yBACEC,IAAKC,gCACLC,IAAI,OACJC,MAAO,CAAEC,YAAa,YAJ1B,YAQA,kBAACV,EAAA,EAAKI,KAAN,CAAWO,KAAK,WAChB,kBAACX,EAAA,EAAKI,KAAN,KACE,kBAACQ,EAAA,EAAD,CAAQC,QAAQ,QAAQC,UAAQ,EAACb,UAAQ,EAACc,QAAQ,kBAEpD,kBAACf,EAAA,EAAKI,KAAN,CAAWY,SAAS,SAClB,kBAACJ,EAAA,EAAD,CAAQK,OAAK,EAAChB,UAAQ,EAACc,QAAQ,UAC/B,kBAACH,EAAA,EAAD,CACEK,OAAK,EACLhB,UAAQ,EACRc,QAAQ,UACRN,MAAO,CAAES,WAAY,cCTlBC,MAXf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAChB,EAAA,EAAD,KACE,kBAAC,EAAD,SCEOiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCAdQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SAKjDZ,M","file":"static/js/main.afdeda4e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\n\nfunction EventDashboard() {\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <h2>left col</h2>\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <h2>right col</h2>\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default EventDashboard;\n","import React from \"react\";\nimport { Button, Container, Menu } from \"semantic-ui-react\";\n\nfunction NavBar() {\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item header>\n          <img\n            src={process.env.PUBLIC_URL + \"/assets/logo.png\"}\n            alt=\"Logo\"\n            style={{ marginRight: \"0.5rem\" }}\n          />\n          Re-vents\n        </Menu.Item>\n        <Menu.Item name=\"Events\" />\n        <Menu.Item>\n          <Button floated=\"right\" positive inverted content=\"Create Event\" />\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <Button basic inverted content=\"Login\" />\n          <Button\n            basic\n            inverted\n            content=\"SignOut\"\n            style={{ marginLeft: \"1rem\" }}\n          />\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport EventDashboard from \"../../features/event/event-dashboard\";\nimport NavBar from \"../../features/nav/nav-bar\";\n\nfunction App() {\n  return (\n    <>\n      <NavBar />\n      <Container>\n        <EventDashboard />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/layout/app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}