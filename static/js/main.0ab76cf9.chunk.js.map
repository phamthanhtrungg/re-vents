{"version":3,"sources":["features/event/event-form/index.jsx","features/event/event-list/event-list-attendee.jsx","features/event/event-list/event-list-item.jsx","features/event/event-list/event-list.jsx","features/event/event-dashboard/index.jsx","features/nav/nav-bar/index.jsx","app/layout/app.jsx","reportWebVitals.js","index.js"],"names":["EventForm","Segment","Form","Field","htmlFor","type","placeholder","Button","positive","style","marginLeft","EventListAttendee","List","Item","Image","as","size","circular","src","EventListItem","Group","Content","Header","Description","href","Icon","name","secondary","horizontal","clearing","color","floated","EventList","EventDashboard","Grid","Column","width","NavBar","Menu","inverted","fixed","Container","header","process","alt","marginRight","content","position","basic","App","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0ab76cf9.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\n\nfunction EventForm() {\n  return (\n    <Segment>\n      <Form>\n        <Form.Field>\n          <label htmlFor=\"\">Event title</label>\n          <input type=\"text\" placeholder=\"First Name\" />\n        </Form.Field>\n        <Form.Field>\n          <label htmlFor=\"\">Event Date</label>\n          <input type=\"date\" />\n        </Form.Field>\n        <Form.Field>\n          <label htmlFor=\"\">City</label>\n          <input type=\"text\" placeholder=\"City event is taking place\" />\n        </Form.Field>\n        <Form.Field>\n          <label htmlFor=\"\">Venue</label>\n          <input type=\"text\" placeholder=\"Enter the Venue of the event\" />\n        </Form.Field>\n        <Form.Field>\n          <label htmlFor=\"\">Hosted By</label>\n          <input\n            type=\"text\"\n            placeholder=\"Enter the name of the person hosting\"\n          />\n        </Form.Field>\n        <Button positive type=\"submit\">\n          Submit\n        </Button>\n        <Button style={{ marginLeft: \"1rem\" }}>Cancel</Button>\n      </Form>\n    </Segment>\n  );\n}\n\nexport default EventForm;\n","import React from \"react\";\nimport { List, Image } from \"semantic-ui-react\";\n\nfunction EventListAttendee() {\n  return (\n    <List.Item>\n      <Image\n        as=\"a\"\n        size=\"mini\"\n        circular\n        src=\"https://randomuser.me/api/portraits/lego/3.jpg\"\n      />\n    </List.Item>\n  );\n}\n\nexport default EventListAttendee;\n","import React from \"react\";\nimport { Button, Icon, Item, List, Segment } from \"semantic-ui-react\";\nimport EventListAttendee from \"./event-list-attendee\";\n\nfunction EventListItem() {\n  return (\n    <Segment.Group>\n      <Segment>\n        <Item.Group>\n          <Item>\n            <Item.Image\n              size=\"tiny\"\n              circular\n              src=\"https://randomuser.me/api/portraits/lego/3.jpg\"\n            />\n            <Item.Content>\n              <Item.Header as=\"a\">Event Title</Item.Header>\n              <Item.Description>\n                Hosted by <a href=\"/\">hosted by</a>\n              </Item.Description>\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" /> date |\n          <Icon name=\"marker\" /> time\n        </span>\n      </Segment>\n      <Segment secondary>\n        <List horizontal>\n          <EventListAttendee />\n          <EventListAttendee />\n          <EventListAttendee />\n        </List>\n      </Segment>\n      <Segment clearing>\n        <span>Description will go here</span>\n        <Button as=\"a\" href=\"#\" color=\"teal\" floated=\"right\">\n          View\n        </Button>\n      </Segment>\n    </Segment.Group>\n  );\n}\n\nexport default EventListItem;\n","import React from \"react\";\nimport EventListItem from \"./event-list-item\";\n\nfunction EventList() {\n  return (\n    <div>\n      <h1>Event List</h1>\n      <EventListItem />\n      <EventListItem />\n      <EventListItem />\n    </div>\n  );\n}\n\nexport default EventList;\n","import React from \"react\";\nimport { Button, Grid } from \"semantic-ui-react\";\nimport EventForm from \"../event-form\";\nimport EventList from \"../event-list/event-list\";\n\nfunction EventDashboard() {\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <EventList />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <Button positive>Create Event</Button>\n        <EventForm />\n      </Grid.Column>\n    </Grid>\n  );\n}\n\nexport default EventDashboard;\n","import React from \"react\";\nimport { Button, Container, Menu } from \"semantic-ui-react\";\n\nfunction NavBar() {\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item header>\n          <img\n            src={process.env.PUBLIC_URL + \"/assets/logo.png\"}\n            alt=\"Logo\"\n            style={{ marginRight: \"0.5rem\" }}\n          />\n          Re-vents\n        </Menu.Item>\n        <Menu.Item name=\"Events\" />\n        <Menu.Item>\n          <Button floated=\"right\" positive inverted content=\"Create Event\" />\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <Button basic inverted content=\"Login\" />\n          <Button\n            basic\n            inverted\n            content=\"SignOut\"\n            style={{ marginLeft: \"1rem\" }}\n          />\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n}\n\nexport default NavBar;\n","import React from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport EventDashboard from \"../../features/event/event-dashboard\";\nimport NavBar from \"../../features/nav/nav-bar\";\n\nfunction App() {\n  return (\n    <>\n      <NavBar />\n      <Container style={{ marginTop: \"5rem\" }}>\n        <EventDashboard />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./app/layout/app\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}